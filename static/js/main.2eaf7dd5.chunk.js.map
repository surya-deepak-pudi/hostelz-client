{"version":3,"sources":["nodata.png","reducers/branchesReducer.js","actions/actionTypes.js","reducers/tenentsReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","reducers/roomReducer.js","api/backendApi.js","api/setAuthToken.js","actions/authActions.js","components/Layouts/header.js","components/basic/home.js","components/utilities/styledComponents.js","components/utilities/FieldComponets.js","components/basic/login.js","components/basic/verify.js","components/basic/register.js","actions/TenentsActions.js","components/utilities/Pagination.js","components/Layouts/tennetsList.js","components/basic/balance.js","history.js","actions/branchesActions.js","components/Layouts/branchCard.js","components/branches/branches.js","components/Layouts/RenderRooms.js","actions/roomsActions.js","components/branches/branchesShow.js","components/Layouts/branchform.js","components/branches/branchesEdit.js","components/branches/branchesCreate.js","components/tenents/tenents.js","components/tenents/tenentsShow.js","components/Layouts/tenentsForm.js","components/tenents/tenentsEdit.js","components/tenents/tenentsCreate.js","components/rooms/rooms.js","components/Layouts/roomForm.js","components/rooms/roomsCreate.js","components/Layouts/roomEditForm.js","components/rooms/roomsEdit.js","components/App.js","index.js"],"names":["module","exports","flooring","branches","sortedRooms","i","floors","rooms","room","floor","push","branchesReducer","state","action","type","_","mapKeys","payload","_id","omit","tenentsReducer","errorReducer","unauthorized","noRecords","initialState","isAuthenticated","user","isVerified","combineReducers","form","formReducer","tenents","errors","auth","isEmpty","axios","create","baseURL","setAuthToken","token","backend","defaults","headers","common","setCurrentUser","decoded","Header","buttonRender","props","Button","onClick","logoutUser","history","color","style","marginLeft","href","this","location","pathname","slice","AppBar","position","Toolbar","Grid","container","justify","alignItems","item","IconButton","edge","aria-label","Typography","variant","Paper","backgroundColor","component","marginTop","marginBottom","React","Component","connect","dispatch","localStorage","removeItem","withRouter","GreyPaper","withStyles","root","background","borderRadius","border","height","padding","boxShadow","label","textTransform","paddingBottom","paddingRight","paddingLeft","Repeator","createArray","number","a","filled","vacancies","direction","map","el","marginRight","RedButton","margin","GreenButton","YellowButton","XsTextField","width","TextField","SmTextField","StyledSelect","Select","MdTextField","Spinner","card","maxWidth","media","display","flexDirection","flexWrap","justifyContent","Container","align","CircularProgress","TextFieldComponent","input","meta","touched","invalid","error","custom","size","placeholder","helperText","radioButtonComponent","selectedValue","value","FormControl","FormLabel","RadioGroup","name","onChange","row","FormControlLabel","control","Radio","labelPlacement","checked","DeleteButton","onClickMethod","renderFromHelper","FormHelperText","renderSelectField","children","InputLabel","htmlFor","native","inputProps","id","Login","renderAlert","data","msg","onSubmit","handleSubmit","formValues","loginUser","Field","to","values","post","then","res","setItem","decodedToken","jwt_decode","catch","err","response","reduxForm","validate","forEach","field","mail","test","Verify","verifyAccount","rand","match","params","verified","Register","registerUser","provideError","console","log","showTenents","get","date","Pagination","renderButtons","start","end","arr","Array","from","x","index","currentPage","e","buttonClicked","setState","pagesRender","totalPages","table","totalRecords","FirstPage","NavigateBefore","NavigateNext","LastPage","Tenents","buttons","tenent","button","key","otherFields","fields","handleChange","paginatedTenents","Object","perPage","renderContent","List","ListItem","ListItemAvatar","Avatar","alt","src","image","textDecoration","ListItemText","primary","secondary","Fragment","BranchName","ListItemSecondaryAction","Divider","Math","ceil","keys","length","cp","noTenents","paidButton","payRent","fetchBalances","put","document","reload","createHistory","fetchBranches","str","join","showBranches","RenderCard","deleteMethod","branch","Card","CardActionArea","CardMedia","title","CardContent","gutterBottom","address","CardActions","Branches","spacing","xs","sm","md","deleteBranches","delete","RoomRender","isArray","listStyle","constructor","fee","AC","beds","window","RenderRooms","deleteRoomsAction","rid","ShowBranch","careTaker","ownProps","BranchForm","inputFieldComponent","multiple","onDone","files","base64","multiline","rowsMax","toString","BranchEdit","updateBranches","initialValues","pick","createBranches","bgcolor","editButton","deleteButton","deleteTenents","fetchTenents","offset","buttonArray","ShowTenents","adhar","occupation","gaurdianName","gaurdianNumber","gaurdianAddress","fullStyle","clickedStyle","unclickedStyle","TenentForm","styleProvider","selected","roomFieldComponent","roomFloors","selectedBranch","roomNumber","count","prevProps","Branch","InputLabelProps","shrink","branchesArr","renderOptions","selector","formValueSelector","gaurdiannumber","TenentsEdit","updateTenents","TenentCreate","createTenents","goBack","RoomForm","fieldArrayComponent","min","remove","FieldArray","initalValues","roomArrayErrors","roomIndex","roomErrors","_errors","RoomsCreate","renderDone","img","renderList","createRoomsAction","RoomEditForm","editRoomsAction","showRoomsAction","theme","createMuiTheme","palette","light","main","dark","contrastText","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","Thunk","jwtToken","ReactDOM","render","basename","path","exact","Home","BranchesCreate","BranchesShow","BranchesEdit","Rooms","RoomsEdit","TenentsShow","TenentsCreate","Balance","querySelector"],"mappings":"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","file":"static/js/main.2eaf7dd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nodata.8ba65c1e.png\";","import _ from \"lodash\"\r\nimport {\r\n  FETCH_BRANCH,\r\n  SHOW_BRANCH,\r\n  DELETE_BRANCH,\r\n  UPDATE_BRANCH,\r\n  CREATE_BRANCH\r\n} from \"../actions/actionTypes\"\r\n\r\nconst flooring = branches => {\r\n  let sortedRooms = []\r\n  for (let i = 0; i < branches.floors; i++) {\r\n    sortedRooms[i] = [i + 1]\r\n  }\r\n  let rooms = branches.rooms\r\n  for (let room of rooms) {\r\n    sortedRooms[room.floor - 1].push(room)\r\n  }\r\n  branches.rooms = sortedRooms\r\n  return branches\r\n}\r\n\r\nconst branchesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BRANCH:\r\n      return { ...state, ..._.mapKeys(action.payload, \"_id\") }\r\n    case CREATE_BRANCH:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case SHOW_BRANCH:\r\n      action.payload = flooring(action.payload)\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case UPDATE_BRANCH:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case DELETE_BRANCH:\r\n      return _.omit(state, action.payload._id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default branchesReducer\r\n","export const FETCH_BRANCH = \"fetchBranch\"\r\nexport const DELETE_BRANCH = \"deleteBranch\"\r\nexport const UPDATE_BRANCH = \"updateBranch\"\r\nexport const SHOW_BRANCH = \"showBranch\"\r\nexport const CREATE_BRANCH = \"createBranch\"\r\nexport const DELETE_ROOMS = \"deleteRooms\"\r\nexport const CREATE_ROOMS = \"createRooms\"\r\nexport const EDIT_ROOMS = \"editRooms\"\r\nexport const SHOW_ROOMS = \"showRooms\"\r\nexport const DELETE_TENENTS = \"deleteTenents\"\r\nexport const CREATE_TENENTS = \"createTenents\"\r\nexport const EDIT_TENENTS = \"editTenents\"\r\nexport const SHOW_TENENTS = \"showTenents\"\r\nexport const FETCH_TENENTS = \"fetchTenents\"\r\nexport const GET_ERRORS = \"Errors\"\r\nexport const SET_USER = \"setUser\"\r\nexport const UNAUTHORIZED = \"unauthorized\"\r\nexport const NORECORDS = \"noRecord\"\r\n","import _ from \"lodash\"\r\nimport {\r\n  FETCH_TENENTS,\r\n  SHOW_TENENTS,\r\n  DELETE_TENENTS,\r\n  EDIT_TENENTS,\r\n  CREATE_TENENTS\r\n} from \"../actions/actionTypes\"\r\n\r\nconst tenentsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_TENENTS:\r\n      return { ...state, ..._.mapKeys(action.payload, \"_id\") }\r\n    case CREATE_TENENTS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case SHOW_TENENTS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case EDIT_TENENTS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case DELETE_TENENTS:\r\n      return _.omit(state, action.payload._id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tenentsReducer\r\n","import { GET_ERRORS, UNAUTHORIZED, NORECORDS } from \"../actions/actionTypes\"\r\n\r\nconst errorReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return { ...state, ...action.payload }\r\n    case UNAUTHORIZED:\r\n      return { ...state, unauthorized: true }\r\n    case NORECORDS:\r\n      return { ...state, noRecords: true }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default errorReducer\r\n","import { SET_USER } from \"../actions/actionTypes\"\r\nimport _ from \"lodash\"\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  isVerified: true\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !_.isEmpty(action.payload),\r\n        user: action.payload,\r\n        isVerified: action.payload.isVerified\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport branchesReducer from \"./branchesReducer\"\r\nimport roomReducer from \"./roomReducer\"\r\nimport tenentsReducer from \"./tenentsReducer\"\r\nimport errorReducer from \"./errorReducer\"\r\nimport authReducer from \"./authReducer\"\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  branches: branchesReducer,\r\n  rooms: roomReducer,\r\n  tenents: tenentsReducer,\r\n  errors: errorReducer,\r\n  auth: authReducer\r\n})\r\n","import _ from \"lodash\"\r\nimport {\r\n  CREATE_ROOMS,\r\n  EDIT_ROOMS,\r\n  DELETE_ROOMS,\r\n  SHOW_ROOMS\r\n} from \"../actions/actionTypes\"\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_ROOMS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case DELETE_ROOMS:\r\n      return _.omit(state, action.payload._id)\r\n    case SHOW_ROOMS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case EDIT_ROOMS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://tranquil-dusk-98551.herokuapp.com/\"\r\n})\r\n","import backend from \"./backendApi\"\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    backend.defaults.headers.common[\"Authorization\"] = token\r\n  } else {\r\n    delete backend.defaults.headers.common[\"Authorization\"]\r\n  }\r\n}\r\n\r\nexport default setAuthToken\r\n","import jwt_decode from \"jwt-decode\"\r\nimport { GET_ERRORS, SET_USER } from \"./actionTypes\"\r\nimport backend from \"../api/backendApi\"\r\nimport setAuthToken from \"../api/setAuthToken\"\r\n\r\nexport const registerUser = (values, history) => dispatch => {\r\n  backend\r\n    .post(\"/register\", values)\r\n    .then(res => {\r\n      const { token } = res.data\r\n      localStorage.setItem(\"jwtToken\", token)\r\n      setAuthToken(token)\r\n      const decodedToken = jwt_decode(token)\r\n      dispatch(setCurrentUser(decodedToken))\r\n      history.push(\"/\")\r\n    })\r\n    .catch(err => {\r\n      console.log(err.response.data)\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data })\r\n    })\r\n}\r\n\r\nexport const loginUser = (values, history) => dispatch => {\r\n  backend\r\n    .post(\"/login\", values)\r\n    .then(res => {\r\n      const { token } = res.data\r\n      localStorage.setItem(\"jwtToken\", token)\r\n      setAuthToken(token)\r\n      const decodedToken = jwt_decode(token)\r\n      dispatch(setCurrentUser(decodedToken))\r\n      history.push(\"/\")\r\n    })\r\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }))\r\n}\r\n\r\nexport const verifyAccount = value => dispatch => {\r\n  backend.post(\"/verify\", value).then(res => {\r\n    if (res.data.verified) {\r\n      localStorage.removeItem(\"jwtToken\")\r\n      setAuthToken(false)\r\n      dispatch(setCurrentUser({}))\r\n    }\r\n  })\r\n}\r\n\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_USER,\r\n    payload: decoded\r\n  }\r\n}\r\n\r\nexport const logoutUser = history => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\")\r\n  setAuthToken(false)\r\n  dispatch(setCurrentUser({}))\r\n  history.push(\"/\")\r\n}\r\n","import React, { Fragment } from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Paper\r\n} from \"@material-ui/core\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport { logoutUser } from \"../../actions/authActions\"\r\n\r\nclass Header extends React.Component {\r\n  componentDidMount() {\r\n    // console.log(this.props.location.pathname)\r\n    if (\r\n      !this.props.auth.isAuthenticated &&\r\n      this.props.location.pathname !== \"/login\" &&\r\n      this.props.location.pathname !== \"/register\" &&\r\n      this.props.location.pathname.slice(0, 8) !== \"/verify/\"\r\n    ) {\r\n      this.props.history.push(\"/\")\r\n    }\r\n  }\r\n  buttonRender = () => {\r\n    if (this.props.auth.isAuthenticated) {\r\n      return (\r\n        <Button\r\n          onClick={() => this.props.logoutUser(this.props.history)}\r\n          color=\"inherit\"\r\n          style={{ marginLeft: \"3px\" }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      )\r\n    } else {\r\n      return (\r\n        <Button href=\"/login\" color=\"inherit\">\r\n          Login\r\n        </Button>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Grid container justify=\"space-between\" alignItems=\"center\">\r\n              <Grid item>\r\n                <Grid container justify=\"flex-start\" alignItems=\"center\">\r\n                  <Grid item>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      aria-label=\"menu\"\r\n                      href=\"/\"\r\n                    >\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"h6\">Hostel Name</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  href=\"/branches\"\r\n                  color=\"inherit\"\r\n                  style={{ marginLeft: \"3px\" }}\r\n                >\r\n                  Branches\r\n                </Button>\r\n                <Button\r\n                  href=\"/tenents\"\r\n                  color=\"inherit\"\r\n                  style={{ marginLeft: \"3px\" }}\r\n                >\r\n                  Tenents\r\n                </Button>\r\n                <Button\r\n                  href=\"/balances\"\r\n                  color=\"inherit\"\r\n                  style={{ marginLeft: \"3px\" }}\r\n                >\r\n                  Balance\r\n                </Button>\r\n                {this.buttonRender()}\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.props.auth.isVerified === false && (\r\n          <Paper style={{ backgroundColor: \"red\" }}>\r\n            <Typography\r\n              // color=\"primary\"\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n            >\r\n              Please check your mail for verification link\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst MapStateToProps = state => {\r\n  return { auth: state.auth, errors: state.errors }\r\n}\r\nexport default connect(MapStateToProps, { logoutUser })(withRouter(Header))\r\n","import React from \"react\"\r\n\r\nexport default () => {\r\n  return <h1>Home</h1>\r\n}\r\n","import React, { Fragment } from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Select,\r\n  Container,\r\n  CircularProgress\r\n} from \"@material-ui/core\"\r\nimport HotelOutlinedIcon from \"@material-ui/icons/HotelOutlined\"\r\nimport HotelIcon from \"@material-ui/icons/Hotel\"\r\n\r\nexport const StyledButton = withStyles({\r\n  root: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\",\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\"\r\n  }\r\n})(Button)\r\n\r\nexport const GreyPaper = withStyles({\r\n  root: {\r\n    background: \"#bbdefb\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    padding: \"10px\",\r\n    paddingBottom: \"10px\",\r\n    paddingRight: \"25px\",\r\n    paddingLeft: \"25px\"\r\n  }\r\n})(Paper)\r\n\r\nexport class Repeator extends React.Component {\r\n  createArray = number => {\r\n    let a = []\r\n    for (let i = 0; i < number; i++) {\r\n      a[i] = i\r\n    }\r\n    return a\r\n  }\r\n  render() {\r\n    let filled = this.createArray(this.props.number - this.props.vacancies)\r\n    let vacancies = this.createArray(this.props.vacancies)\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"baseline\"\r\n      >\r\n        <Grid item>\r\n          {filled.map(el => {\r\n            return <HotelIcon style={{ marginRight: \"2px\" }} />\r\n          })}\r\n        </Grid>\r\n        <Grid item>\r\n          {vacancies.map(el => {\r\n            return <HotelOutlinedIcon style={{ marginRight: \"2px\" }} />\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport const RedButton = withStyles({\r\n  root: {\r\n    background: \"red\",\r\n    margin: \"2px\"\r\n  },\r\n  label: {\r\n    color: \"white\"\r\n  }\r\n})(Button)\r\n\r\nexport const GreenButton = withStyles({\r\n  root: {\r\n    background: \"green\",\r\n    margin: \"2px\"\r\n  },\r\n  label: {\r\n    color: \"white\"\r\n  }\r\n})(Button)\r\n\r\nexport const YellowButton = withStyles({\r\n  root: {\r\n    background: \"#ffc400\",\r\n    margin: \"2px\"\r\n  },\r\n  label: {\r\n    color: \"white\"\r\n  }\r\n})(Button)\r\n\r\nexport const XsTextField = withStyles({\r\n  root: {\r\n    width: 100,\r\n    marginRight: \"20px\",\r\n    marginBottom: \"20px\"\r\n  }\r\n})(TextField)\r\n\r\nexport const SmTextField = withStyles({\r\n  root: {\r\n    width: 200,\r\n    marginRight: \"20px\",\r\n    marginBottom: \"20px\"\r\n  }\r\n})(TextField)\r\n\r\nexport const StyledSelect = withStyles({\r\n  root: {\r\n    width: 200\r\n  }\r\n})(Select)\r\n\r\nexport const MdTextField = withStyles({\r\n  root: {\r\n    width: 400,\r\n    marginRight: \"20px\",\r\n    marginBottom: \"20px\"\r\n  }\r\n})(TextField)\r\n\r\nexport const StyledCard = withStyles({\r\n  root: {\r\n    card: {\r\n      maxWidth: 345\r\n    },\r\n    media: {\r\n      height: 140\r\n    }\r\n  }\r\n})\r\n\r\nexport const VerticalAlignGrid = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexWrap: \"nowrap\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  }\r\n})(Grid)\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <Container\r\n      align=\"center\"\r\n      style={{ marginTop: \"150px\", marginBottom: \"150px\" }}\r\n    >\r\n      <CircularProgress />\r\n    </Container>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  TextField,\r\n  Radio,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Input,\r\n  InputBase\r\n} from \"@material-ui/core\"\r\nimport DeleteOutlineRoundedIcon from \"@material-ui/icons/DeleteOutlineRounded\"\r\nimport {\r\n  MdTextField,\r\n  XsTextField,\r\n  SmTextField,\r\n  RedButton,\r\n  StyledSelect\r\n} from \"./styledComponents\"\r\nimport { Field } from \"redux-form\"\r\n\r\nexport const TextFieldComponent = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => {\r\n  switch (custom.size) {\r\n    case \"md\":\r\n      return (\r\n        <MdTextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n    case \"xs\":\r\n      return (\r\n        <XsTextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n    case \"sm\":\r\n      return (\r\n        <SmTextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n    default:\r\n      return (\r\n        <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n  }\r\n}\r\n\r\nexport const imageField = data => {\r\n  const {\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  } = data\r\n  console.log(data)\r\n  return (\r\n    <FormControl>\r\n      <InputBase\r\n        id=\"imageInput\"\r\n        variant=\"outlined\"\r\n        type=\"file\"\r\n        {...input}\r\n        error={(touched && invalid) || custom.provideError}\r\n        helperText={touched && error}\r\n        aria-describedby=\"imageInputHelperText\"\r\n      />\r\n      <FormHelperText id=\"imageInputHelperText\" error={true}>\r\n        {custom.helperText}\r\n      </FormHelperText>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const radioButtonComponent = ({ input }) => {\r\n  const selectedValue = input.value\r\n  return (\r\n    <FormControl style={{ display: \"inline-block\" }}>\r\n      <FormLabel component=\"legend\">AC:</FormLabel>\r\n      <RadioGroup\r\n        name={input.name}\r\n        value={input.value}\r\n        onChange={input.onChange}\r\n        row\r\n      >\r\n        <FormControlLabel\r\n          value={true}\r\n          control={<Radio />}\r\n          label=\"YES\"\r\n          labelPlacement=\"start\"\r\n          checked={selectedValue === \"true\" || selectedValue === true}\r\n        />\r\n        <FormControlLabel\r\n          value={false}\r\n          control={<Radio />}\r\n          label=\"NO\"\r\n          labelPlacement=\"start\"\r\n          checked={selectedValue === \"false\" || selectedValue === false}\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const DeleteButton = ({ onClickMethod }) => {\r\n  return (\r\n    <RedButton size=\"small\" onClick={onClickMethod}>\r\n      <DeleteOutlineRoundedIcon></DeleteOutlineRoundedIcon>\r\n    </RedButton>\r\n  )\r\n}\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderSelectField = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} style={{ marginBottom: \"20px\" }}>\r\n    <InputLabel htmlFor=\"age-native-simple\" style={{ marginLeft: \"20px\" }}>\r\n      {input.name}\r\n    </InputLabel>\r\n    <StyledSelect\r\n      variant=\"outlined\"\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        name: \"Branch\",\r\n        id: \"age-native-simple\"\r\n      }}\r\n    >\r\n      {children}\r\n    </StyledSelect>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderOptions = branches => {\r\n  if (branches) {\r\n    let branchesArr = Object.values(branches)\r\n    return (\r\n      <Field name=\"Branch\" component={renderSelectField} label=\"branch\">\r\n        <option value=\"\"></option>\r\n        {branchesArr.map(branch => {\r\n          return <option value={branch._id}>{branch.name}</option>\r\n        })}\r\n      </Field>\r\n    )\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { withRouter, Link } from \"react-router-dom\"\r\nimport { Container, Typography, Button, Paper } from \"@material-ui/core\"\r\nimport { TextFieldComponent } from \"../utilities/FieldComponets\"\r\nimport { connect } from \"react-redux\"\r\nimport { loginUser } from \"../../actions/authActions\"\r\n\r\nclass Login extends Component {\r\n  renderAlert = data => {\r\n    return (\r\n      <Paper\r\n        style={{\r\n          color: \"black\",\r\n          backgroundColor: \"#ffcdd2\",\r\n          width: \"420px\",\r\n          marginRight: \"7px\",\r\n          marginBottom: \"20px\",\r\n          padding: \"5px\"\r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle1\" component=\"h3\">\r\n          {data}\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n          >\r\n            Login\r\n          </Typography>\r\n          {this.props.errors.msg && this.renderAlert(this.props.errors.msg)}\r\n          <form\r\n            onSubmit={this.props.handleSubmit(formValues => {\r\n              this.props.loginUser(formValues, this.props.history)\r\n            })}\r\n          >\r\n            <Field\r\n              name=\"mail\"\r\n              label=\"Enter email id\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"password\"\r\n              label=\"Enter password\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              style={{ marginBottom: \"30px\" }}\r\n              type=\"submit\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </form>\r\n          <Link to=\"/register\" style={{ marginTop: \"10px\" }}>\r\n            <Typography variant=\"caption\" component=\"p\">\r\n              Not a user? SignUp\r\n            </Typography>\r\n          </Link>\r\n        </Container>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (values, props) => {\r\n  //   console.log(props)\r\n  let errors = {}\r\n  const requiredFields = [\"mail\", \"password\"]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required!\"\r\n    }\r\n  })\r\n  if (\r\n    values.mail &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.mail)\r\n  ) {\r\n    errors.mail = \"Invalid email address!\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginUser })(\r\n  reduxForm({ form: \"loginForm\", validate })(withRouter(Login))\r\n)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { verifyAccount } from \"../../actions/authActions\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Button } from \"@material-ui/core\"\r\n\r\nclass Verify extends Component {\r\n  componentDidMount() {\r\n    this.props.verifyAccount({\r\n      rand: this.props.match.params.value,\r\n      id: this.props.match.params.id\r\n    })\r\n  }\r\n  render() {\r\n    if (\r\n      this.props.auth.user.isVerified &&\r\n      this.props.auth.user.isVerified === false\r\n    ) {\r\n      return (\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n        >\r\n          Please check your mail for verification link\r\n        </Typography>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n          >\r\n            Your mail is successfully verified\r\n          </Typography>\r\n          <br></br>\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginTop: \"30px\" }}\r\n            href=\"/login\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { verifyAccount })(Verify)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport _ from \"lodash\"\r\nimport { Container, Typography, Button } from \"@material-ui/core\"\r\nimport { TextFieldComponent } from \"../utilities/FieldComponets\"\r\nimport { connect } from \"react-redux\"\r\nimport { registerUser } from \"../../actions/authActions\"\r\n\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n          >\r\n            Register\r\n          </Typography>\r\n          <form\r\n            onSubmit={this.props.handleSubmit(formValues => {\r\n              formValues = _.omit(formValues, \"retype\")\r\n              this.props.registerUser(formValues, this.props.history)\r\n            })}\r\n          >\r\n            <Field\r\n              name=\"name\"\r\n              label=\"Enter username\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"mail\"\r\n              label=\"Enter email id\"\r\n              component={TextFieldComponent}\r\n              provideError={!_.isEmpty(this.props.errors) ? true : false}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n              helperText={\r\n                !_.isEmpty(this.props.errors) ? this.props.errors.mail : null\r\n              }\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"password\"\r\n              label=\"Enter password\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"retype\"\r\n              label=\"Re-type password\"\r\n              type=\"password\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              style={{ marginTop: \"30px\" }}\r\n              type=\"submit\"\r\n            >\r\n              SignUp\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (values, props) => {\r\n  //   console.log(props)\r\n  const errors = {}\r\n  const requiredFields = [\"name\", \"mail\", \"password\", \"retype\"]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (values[\"password\"] !== values[\"retype\"]) {\r\n    errors[\"retype\"] = \"Not Matching\"\r\n  }\r\n  if (\r\n    values.mail &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.mail)\r\n  ) {\r\n    errors.mail = \"Invalid email address\"\r\n  }\r\n  //   console.log(props.users.errors)\r\n  return errors\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { registerUser })(\r\n  reduxForm({ form: \"registerForm\", validate })(withRouter(Register))\r\n)\r\n","import {\r\n  FETCH_TENENTS,\r\n  SHOW_TENENTS,\r\n  DELETE_TENENTS,\r\n  EDIT_TENENTS,\r\n  CREATE_TENENTS,\r\n  NORECORDS\r\n} from \"../actions/actionTypes\"\r\n// import { createRoomsAction } from \"./roomsActions\"\r\nimport backend from \"../api/backendApi\"\r\n\r\nexport const fetchTenents = () => dispatch => {\r\n  backend.get(\"/tenents\").then(tenents => {\r\n    if (tenents.data.length) {\r\n      //console.log(tenents.data)\r\n      dispatch({ type: FETCH_TENENTS, payload: tenents.data })\r\n    } else {\r\n      dispatch({ type: NORECORDS, payload: true })\r\n    }\r\n  })\r\n}\r\nexport const showTenents = id => dispatch => {\r\n  backend.get(`/tenents/${id}`).then(tenents => {\r\n    let date = tenents.data.date\r\n    date = date.slice(0, 10)\r\n    dispatch({\r\n      type: SHOW_TENENTS,\r\n      payload: { ...tenents.data, date: date }\r\n    })\r\n  })\r\n}\r\nexport const updateTenents = (values, history, id) => dispatch => {\r\n  backend.put(`/tenents/${id}`, values).then(branches => {\r\n    console.log(branches.data)\r\n    dispatch({ type: EDIT_TENENTS, payload: branches.data })\r\n    history.push(\"/tenents/\" + id)\r\n  })\r\n}\r\nexport const deleteTenents = id => dispatch => {\r\n  backend.delete(\"/tenents/\" + id).then(tenents => {\r\n    dispatch({ type: DELETE_TENENTS, payload: tenents.data })\r\n  })\r\n}\r\nexport const createTenents = (values, history) => dispatch => {\r\n  console.log(values)\r\n  backend.post(\"/tenents\", values).then(branches => {\r\n    dispatch({ type: CREATE_TENENTS, payload: branches.data })\r\n    history.goBack()\r\n  })\r\n}\r\n\r\nexport const fetchBalances = () => dispatch => {\r\n  backend.get(\"/tenents/balances\").then(tenents => {\r\n    if (tenents.data.length) {\r\n      dispatch({ type: FETCH_TENENTS, payload: tenents.data })\r\n    } else {\r\n      dispatch({ type: NORECORDS, payload: true })\r\n    }\r\n  })\r\n}\r\n\r\nexport const payRent = id => dispatch => {\r\n  backend.put(`/tenents/${id}/pay`).then(tenents => {\r\n    console.log(tenents)\r\n    dispatch({ type: DELETE_TENENTS, payload: tenents.data })\r\n    document.location.reload()\r\n  })\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Button, Grid, Container } from \"@material-ui/core\"\r\nimport {\r\n  FirstPage,\r\n  LastPage,\r\n  NavigateNext,\r\n  NavigateBefore\r\n} from \"@material-ui/icons\"\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentPage: this.props.currentPage\r\n    }\r\n    console.table(this.state)\r\n  }\r\n  renderButtons = (start, end) => {\r\n    let arr = Array.from(Array(end - start + 1), (x, index) => index + start)\r\n    return (\r\n      <Fragment>\r\n        {arr.map(a => {\r\n          return (\r\n            <Button\r\n              color={this.props.currentPage === a ? \"secondary\" : \"primary\"}\r\n              onClick={e => {\r\n                this.props.buttonClicked(a)\r\n                this.setState({ currentPage: a })\r\n              }}\r\n            >\r\n              {a}\r\n            </Button>\r\n          )\r\n        })}\r\n      </Fragment>\r\n    )\r\n  }\r\n  pagesRender = () => {\r\n    if (this.props.totalPages <= 3) {\r\n      return (\r\n        <Fragment>{this.renderButtons(1, this.props.totalPages)}</Fragment>\r\n        //all pages\r\n      )\r\n    } else {\r\n      console.log(this.state.currentPage)\r\n      if (this.state.currentPage <= 2) {\r\n        console.log(\"im in blabla\")\r\n        //butttons first later dots\r\n        return (\r\n          <Fragment>\r\n            {this.renderButtons(1, 3)}\r\n            <Button color=\"primary\">. . .</Button>\r\n          </Fragment>\r\n        )\r\n      } else if (this.state.currentPage >= this.props.totalPages - 1) {\r\n        //dots first buttons later\r\n        return (\r\n          <Fragment>\r\n            <Button color=\"primary\">. . .</Button>\r\n            {this.renderButtons(\r\n              this.props.totalPages - 2,\r\n              this.props.totalPages\r\n            )}\r\n          </Fragment>\r\n        )\r\n      } else {\r\n        //dots pages dots\r\n        return (\r\n          <Fragment>\r\n            <Button color=\"primary\">. . .</Button>\r\n            {this.renderButtons(\r\n              this.state.currentPage - 1,\r\n              this.state.currentPage + 1\r\n            )}\r\n            <Button color=\"primary\">. . .</Button>\r\n          </Fragment>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props.totalRecords)\r\n    return (\r\n      <Container maxWidth=\"md\" align=\"center\">\r\n        <Grid container>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                this.props.buttonClicked(1)\r\n              }}\r\n            >\r\n              <FirstPage />\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                if (this.props.currentPage !== 1) {\r\n                  this.props.buttonClicked(this.props.currentPage - 1)\r\n                  this.setState({ currentPage: this.props.currentPage - 1 })\r\n                }\r\n              }}\r\n            >\r\n              <NavigateBefore />\r\n            </Button>\r\n          </Grid>\r\n          {this.pagesRender()}\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                if (this.props.currentPage !== this.props.totalPages) {\r\n                  this.props.buttonClicked(this.props.currentPage + 1)\r\n                  this.setState({ currentPage: this.props.currentPage + 1 })\r\n                }\r\n              }}\r\n            >\r\n              <NavigateNext />\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                this.props.buttonClicked(this.props.totalPages)\r\n                this.setState({ currentPage: this.props.totalPages })\r\n              }}\r\n            >\r\n              <LastPage />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pagination\r\n","import React, { Component, Fragment } from \"react\"\r\nimport _ from \"lodash\"\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  Avatar\r\n} from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport Pagination from \"../utilities/Pagination\"\r\n\r\nclass Tenents extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.perPage = 1\r\n    this.state = {\r\n      currentPage: 1,\r\n      noTenents: Object.keys(props.tenents).length\r\n    }\r\n  }\r\n  renderButtons = (buttons, tenent) => {\r\n    let i = 0\r\n    return (\r\n      <Fragment>\r\n        {buttons.map(button => {\r\n          i++\r\n          return <Fragment key={i}>{button(tenent)}</Fragment>\r\n        })}\r\n      </Fragment>\r\n    )\r\n  }\r\n  otherFields = (fields, tenent) => {\r\n    let i = 0\r\n    i++\r\n    return (\r\n      <Fragment>\r\n        {fields.map(field => {\r\n          return (\r\n            <Fragment key={i}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textPrimary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n              >\r\n                {`${field}:`}\r\n              </Typography>\r\n              {tenent[field]}\r\n            </Fragment>\r\n          )\r\n        })}\r\n      </Fragment>\r\n    )\r\n  }\r\n  handleChange = currentPage => {\r\n    this.setState({ currentPage })\r\n  }\r\n  paginatedTenents = () => {\r\n    let tenents = Object.values(this.props.tenents)\r\n    let start = (this.state.currentPage - 1) * this.perPage\r\n    let end = start + this.perPage\r\n    tenents = tenents.slice(start, end)\r\n    return tenents\r\n  }\r\n  renderContent = () => {\r\n    let tenents = this.paginatedTenents()\r\n    return (\r\n      <Fragment>\r\n        <List>\r\n          {tenents.map(tenent => {\r\n            return (\r\n              <Fragment>\r\n                <ListItem alignItems=\"flex-start\">\r\n                  <ListItemAvatar>\r\n                    <Avatar alt={tenent.name} src={tenent.image} />\r\n                  </ListItemAvatar>\r\n                  <Link\r\n                    to={`tenents/show/${tenent._id}`}\r\n                    style={{ textDecoration: \"none\", color: \"black\" }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={tenent.name}\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            branch:\r\n                          </Typography>\r\n                          {tenent.BranchName}\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"textPrimary\"\r\n                            style={{ marginLeft: \"20px\" }}\r\n                          >\r\n                            room:\r\n                          </Typography>\r\n                          {tenent.room}\r\n                          {this.props.fields &&\r\n                            this.otherFields(this.props.fields, tenent)}\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </Link>\r\n                  <ListItemSecondaryAction>\r\n                    {this.renderButtons(this.props.buttons, tenent)}\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              </Fragment>\r\n            )\r\n          })}\r\n        </List>\r\n        <Pagination\r\n          totalPages={Math.ceil(\r\n            Object.keys(this.props.tenents).length / this.perPage\r\n          )}\r\n          perPage={this.perPage}\r\n          currentPage={this.state.currentPage}\r\n          buttonClicked={cp => {\r\n            this.handleChange(cp)\r\n          }}\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {_.isEmpty(this.props.tenents) && <Spinner></Spinner>}\r\n        {!_.isEmpty(this.props.tenents) && this.renderContent()}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tenents\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { Typography, Container, Button } from \"@material-ui/core\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport { fetchBalances, payRent } from \"../../actions/TenentsActions\"\r\nimport TenentsList from \"../Layouts/tennetsList\"\r\n\r\nclass Tenents extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBalances()\r\n  }\r\n  paidButton = tenent => {\r\n    return (\r\n      <Button\r\n        onClick={() => {\r\n          this.props.payRent(tenent._id)\r\n        }}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Paid\r\n      </Button>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"md\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          BALANCES\r\n        </Typography>\r\n        {!this.props.errors.noRecords && (\r\n          <TenentsList\r\n            fields={[\"rent\", \"dues\"]}\r\n            buttons={[this.paidButton]}\r\n            tenents={this.props.tenents}\r\n          />\r\n        )}\r\n        {this.props.errors.noRecords && (\r\n          <Fragment>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h3\"\r\n              style={{ marginTop: \"150px\", marginBottom: \"150px\" }}\r\n            >\r\n              {\"NO PAYMENTS TO BE RECIEVED\"}\r\n            </Typography>\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { tenents: state.tenents, errors: state.errors }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  fetchBalances,\r\n  payRent\r\n})(Tenents)\r\n","import createHistory from \"history/createBrowserHistory\"\r\n\r\nexport default createHistory()\r\n","import {\r\n  FETCH_BRANCH,\r\n  SHOW_BRANCH,\r\n  UPDATE_BRANCH,\r\n  DELETE_BRANCH,\r\n  CREATE_BRANCH,\r\n  UNAUTHORIZED,\r\n  NORECORDS\r\n} from \"./actionTypes\"\r\n// import { createRoomsAction } from \"./roomsActions\"\r\nimport backend from \"../api/backendApi\"\r\nimport history from \"../history\"\r\n\r\nexport const fetchBranches = (fields = []) => dispatch => {\r\n  let str = \"\"\r\n  if (fields.length) {\r\n    str = \"?properties=\" + fields.join(\",\")\r\n  }\r\n  backend\r\n    .get(\"/branches\" + str)\r\n    .then(branches => {\r\n      if (branches.data.length) {\r\n        dispatch({ type: FETCH_BRANCH, payload: branches.data })\r\n      } else {\r\n        dispatch({ type: NORECORDS, payload: true })\r\n      }\r\n    })\r\n    .catch(err => {\r\n      if (err.response.data === \"Unauthorized\") {\r\n        dispatch({ type: UNAUTHORIZED, payload: err.response.data })\r\n      }\r\n      console.log(err.response.data)\r\n    })\r\n}\r\nexport const showBranches = (id, fields = []) => dispatch => {\r\n  let str = \"\"\r\n  if (fields.length) {\r\n    str = \"?properties=\" + fields.join(\",\")\r\n  }\r\n  console.log(str)\r\n  backend\r\n    .get(`/branches/${id}/${str}`)\r\n    .then(branches => {\r\n      console.log(branches)\r\n      dispatch({ type: SHOW_BRANCH, payload: branches.data })\r\n    })\r\n    .catch(err => {\r\n      console.log(err.response)\r\n    })\r\n}\r\nexport const updateBranches = (id, values) => dispatch => {\r\n  console.log(\"im called\")\r\n  console.log(id)\r\n  backend.put(`/branches/${id}`, values).then(branches => {\r\n    console.log(branches.data)\r\n    dispatch({ type: UPDATE_BRANCH, payload: branches.data })\r\n  })\r\n}\r\nexport const deleteBranches = id => dispatch => {\r\n  console.log(\"im called\")\r\n  backend.delete(\"/branches/\" + id).then(branches => {\r\n    dispatch({ type: DELETE_BRANCH, payload: branches.data })\r\n  })\r\n}\r\nexport const createBranches = (id, values) => dispatch => {\r\n  backend.post(\"/branches\", values).then(branches => {\r\n    dispatch({ type: CREATE_BRANCH, payload: branches.data })\r\n    history.push(`/branches/${branches.data._id}/rooms/new`)\r\n    window.location.reload(false)\r\n  })\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia\r\n} from \"@material-ui/core\"\r\nimport { YellowButton } from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\n\r\nclass RenderCard extends React.Component {\r\n  render() {\r\n    const { deleteMethod, branch } = this.props\r\n    return (\r\n      <Card maxWidth=\"350\">\r\n        <CardActionArea href={`/branches/show/${branch._id}`}>\r\n          <CardMedia\r\n            image={branch.image}\r\n            title={branch.name}\r\n            component=\"img\"\r\n            height=\"170\"\r\n          />\r\n          <CardContent>\r\n            <Typography\r\n              // color=\"primary\"\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n            >\r\n              {branch.name}\r\n            </Typography>\r\n            <Typography\r\n              //  color=\"primary\"\r\n              variant=\"body2\"\r\n              component=\"p\"\r\n            >\r\n              {branch.address}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <YellowButton size=\"small\" href={`/branches/edit/${branch._id}`}>\r\n            Edit\r\n          </YellowButton>\r\n          <DeleteButton\r\n            size=\"small\"\r\n            onClickMethod={() => {\r\n              deleteMethod(branch._id)\r\n            }}\r\n          >\r\n            Learn More\r\n          </DeleteButton>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RenderCard\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container, Typography, Grid, Button } from \"@material-ui/core\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport { fetchBranches, deleteBranches } from \"../../actions/branchesActions\"\r\nimport RenderCard from \"../Layouts/branchCard\"\r\n\r\nclass Branches extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBranches([\"_id\", \"image\", \"address\", \"name\"])\r\n  }\r\n  render() {\r\n    let branches = Object.values(this.props.branches)\r\n    return (\r\n      <Fragment>\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n          >\r\n            Branches\r\n          </Typography>\r\n\r\n          <Fragment>\r\n            {!(this.props.errors.noRecords || branches.length) && (\r\n              <Spinner></Spinner>\r\n            )}\r\n            {this.props.errors.noRecords && (\r\n              <Container align=\"center\">\r\n                <Typography\r\n                  component=\"h1\"\r\n                  variant=\"h3\"\r\n                  style={{ marginTop: \"150px\" }}\r\n                >\r\n                  NO TENENTS EXISTS\r\n                </Typography>\r\n              </Container>\r\n            )}\r\n            {branches.length && (\r\n              <Grid container alignItems=\"center\" spacing={2}>\r\n                {branches.map(branch => {\r\n                  return (\r\n                    <Grid item key={branches._id} xs={12} sm={3} md={4}>\r\n                      <RenderCard\r\n                        branch={branch}\r\n                        deleteMethod={this.props.deleteBranches}\r\n                      ></RenderCard>\r\n                    </Grid>\r\n                  )\r\n                })}\r\n              </Grid>\r\n            )}\r\n          </Fragment>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            style={{ marginTop: \"30px\" }}\r\n            href=\"branches/new\"\r\n          >\r\n            Create New\r\n          </Button>\r\n        </Container>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return { branches: state.branches, errors: state.errors }\r\n}\r\nexport default connect(mapStateToProps, { fetchBranches, deleteBranches })(\r\n  Branches\r\n)\r\n","import React, { Fragment } from \"react\"\r\nimport { Typography, Divider, Grid } from \"@material-ui/core\"\r\nimport {\r\n  GreyPaper,\r\n  Repeator,\r\n  YellowButton\r\n} from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\n\r\nconst RoomRender = props => {\r\n  const { rooms } = props\r\n  if (rooms.length > 1 && Array.isArray(rooms)) {\r\n    return (\r\n      <ul style={{ listStyle: \"none\" }}>\r\n        {rooms.map(room => {\r\n          return (\r\n            <Fragment>\r\n              {room && typeof room === \"object\" && room.constructor === Object && (\r\n                <li key={room.number}>\r\n                  <GreyPaper>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          justify=\"flex-start\"\r\n                          alignItems=\"baseline\"\r\n                        >\r\n                          <Grid item>\r\n                            <Typography\r\n                              //  color=\"primary\"\r\n                              variant=\"subtitle1\"\r\n                            >\r\n                              <b>room number:</b>\r\n                              {room.number}\r\n                              <b style={{ marginLeft: \"30px\" }}>rent:</b>\r\n                              {room.fee}\r\n                              <b style={{ marginLeft: \"30px\" }}>A/C:</b>\r\n                              {room.AC ? \"available\" : \"not available\"}\r\n                              <b\r\n                                style={{\r\n                                  marginLeft: \"30px\",\r\n                                  marginRight: \"10px\"\r\n                                }}\r\n                              >\r\n                                beds:\r\n                              </b>\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Repeator\r\n                              number={room.beds}\r\n                              vacancies={room.vacancies}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <YellowButton\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          href={`/branches/${props.id}/rooms/edit/${room._id}`}\r\n                        >\r\n                          Edit\r\n                        </YellowButton>\r\n                        <DeleteButton\r\n                          onClickMethod={() => {\r\n                            this.props.delete(this.props.id, room._id)\r\n                            window.location.reload(false)\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </DeleteButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </GreyPaper>\r\n                </li>\r\n              )}\r\n            </Fragment>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  } else {\r\n    return (\r\n      <GreyPaper>\r\n        <b>\r\n          <Typography component=\"p\" variant=\"h6\">\r\n            NO ROOMS ADDED\r\n          </Typography>\r\n        </b>\r\n      </GreyPaper>\r\n    )\r\n  }\r\n}\r\n\r\nclass RenderRooms extends React.Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.rooms && (\r\n          <Fragment>\r\n            <Typography\r\n              // color=\"primary\"\r\n              variant=\"h5\"\r\n              component=\"h3\"\r\n              style={{\r\n                marginTop: \"20px\",\r\n                marginBottom: \"30px\",\r\n                textTransform: \"capitalize\"\r\n              }}\r\n            >\r\n              Rooms:\r\n            </Typography>\r\n            {this.props.rooms.map(rooms => {\r\n              return (\r\n                <div>\r\n                  <Typography\r\n                    // color=\"primary\"\r\n                    variant=\"h6\"\r\n                    component=\"h4\"\r\n                    style={{\r\n                      marginTop: \"20px\",\r\n                      marginBottom: \"30px\",\r\n                      textTransform: \"capitalize\"\r\n                    }}\r\n                  >\r\n                    {`Floor ${rooms[0]}:`}\r\n                  </Typography>\r\n                  <RoomRender rooms={rooms} id={this.props.id}></RoomRender>\r\n                  <Divider />\r\n                </div>\r\n              )\r\n            })}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RenderRooms\r\n","import {\r\n  DELETE_ROOMS,\r\n  CREATE_ROOMS,\r\n  EDIT_ROOMS,\r\n  SHOW_ROOMS\r\n} from \"./actionTypes\"\r\nimport backend from \"../api/backendApi\"\r\n\r\nexport const createRoomsAction = (id, values) => dispatch => {\r\n  const room = { ...values, vacancies: values.beds }\r\n  console.log(room)\r\n  backend.post(`/branches/${id}/rooms/`, room).then(rooms => {\r\n    dispatch({ type: CREATE_ROOMS, payload: rooms.data })\r\n  })\r\n}\r\n\r\nexport const showRoomsAction = (id, rid) => dispatch => {\r\n  backend.get(`/branches/${id}/rooms/${rid}`).then(room => {\r\n    dispatch({ type: SHOW_ROOMS, payload: room.data })\r\n  })\r\n}\r\n\r\nexport const editRoomsAction = (id, rid, values) => dispatch => {\r\n  console.log(\"IM called action\")\r\n  backend.put(`/branches/${id}/rooms/${rid}`, values).then(rooms => {\r\n    dispatch({ type: EDIT_ROOMS, payload: rooms.data })\r\n  })\r\n}\r\n\r\nexport const deleteRoomsAction = (id, rid) => dispatch => {\r\n  backend.delete(`/branches/${id}/rooms/${rid}`).then(rooms => {\r\n    console.log(\"im called\")\r\n    dispatch({ type: DELETE_ROOMS, payload: rooms.data })\r\n  })\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { Container, Typography, Button } from \"@material-ui/core\"\r\nimport RenderRooms from \"../Layouts/RenderRooms\"\r\nimport { GreyPaper } from \"../utilities/styledComponents\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport { deleteRoomsAction } from \"../../actions/roomsActions\"\r\n\r\nclass ShowBranch extends Component {\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n  }\r\n  render() {\r\n    const { branches } = this.props\r\n    if (!_.isEmpty(branches)) {\r\n      return (\r\n        <Fragment>\r\n          <Container>\r\n            <Typography\r\n              // color=\"primary\"\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              style={{\r\n                marginTop: \"20px\",\r\n                marginBottom: \"30px\",\r\n                textTransform: \"capitalize\"\r\n              }}\r\n            >\r\n              {`${branches.name}:`}\r\n            </Typography>\r\n            <GreyPaper>\r\n              <Typography variant=\"subtitle1\">\r\n                <b style={{ marginRight: \"5px\" }}>CareTaker:</b>\r\n                {branches.careTaker}\r\n                <br></br>\r\n                <b style={{ marginRight: \"5px\" }}>Number:</b>\r\n                {branches.number}\r\n                <br></br>\r\n                <b style={{ marginRight: \"5px\" }}>Address:</b>\r\n                {branches.address}\r\n              </Typography>\r\n            </GreyPaper>\r\n            <RenderRooms\r\n              rooms={branches.rooms}\r\n              delete={this.props.deleteRoomsAction}\r\n              id={this.props.match.params.id}\r\n            ></RenderRooms>\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              href={`/branches/${branches._id}/rooms/new`}\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              Add new Rooms\r\n            </Button>\r\n          </Container>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return <Spinner></Spinner>\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches[ownProps.match.params.id],\r\n    rooms: state.rooms\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { showBranches, deleteRoomsAction })(\r\n  ShowBranch\r\n)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport FileBase from \"react-file-base64\"\r\nimport { TextFieldComponent } from \"../utilities/FieldComponets\"\r\n\r\nclass BranchForm extends Component {\r\n  inputFieldComponent = ({ input }) => {\r\n    return (\r\n      <Fragment>\r\n        <FileBase\r\n          type=\"file\"\r\n          multiple={false}\r\n          onDone={files => {\r\n            console.log(files)\r\n            input.value = files.base64\r\n            input.onChange(input.value)\r\n          }}\r\n        />\r\n        <img\r\n          src={input.value}\r\n          alt=\"upload tenent\"\r\n          style={{ height: \"200px\", width: \"200px\" }}\r\n        ></img>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.branches)\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(formValues => {\r\n          this.props.onSubmit(this.props.id, formValues)\r\n        })}\r\n      >\r\n        <Field\r\n          name=\"name\"\r\n          label=\"Enter the Branch name\"\r\n          component={TextFieldComponent}\r\n          size=\"md\"\r\n          variant=\"outlined\"\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"careTaker\"\r\n          label=\"Enter the care taker name\"\r\n          component={TextFieldComponent}\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"number\"\r\n          label=\"Enter the care taker number\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"floors\"\r\n          label=\"Enter floors\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          size=\"sm\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"address\"\r\n          label=\"Enter address\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n          multiline\r\n          rowsMax=\"4\"\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"image\"\r\n          label=\"upload an image\"\r\n          component={this.inputFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          style={{ marginTop: \"30px\" }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    \"name\",\r\n    \"careTaker\",\r\n    \"number\",\r\n    \"floors\",\r\n    \"address\",\r\n    \"image\"\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (values.floors < 1) {\r\n    errors.floors = \"invalid number\"\r\n  }\r\n  if (values.number && !values.number.toString().match(/^\\d{10}$/)) {\r\n    errors.number = \"invalid phone number\"\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default reduxForm({ form: \"branchForm\", validate })(BranchForm)\r\n","import React, { Component } from \"react\"\r\nimport { Container, Typography, CircularProgress } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { updateBranches, showBranches } from \"../../actions/branchesActions\"\r\nimport BranchForm from \"../Layouts/branchform\"\r\n\r\nclass BranchEdit extends Component {\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n  }\r\n  onSubmit = formValues => {\r\n    this.props.updateBranches(this.props.match.params.id, formValues)\r\n  }\r\n  render() {\r\n    if (this.props.branches) {\r\n      return (\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <Typography\r\n            color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n          >\r\n            Edit Branch\r\n          </Typography>\r\n          <br></br>\r\n          <BranchForm\r\n            id={this.props.match.params.id}\r\n            onSubmit={this.props.updateBranches}\r\n            initialValues={_.pick(\r\n              this.props.branches,\r\n              \"name\",\r\n              \"careTaker\",\r\n              \"number\",\r\n              \"floors\",\r\n              \"address\",\r\n              \"image\"\r\n            )}\r\n          ></BranchForm>\r\n        </Container>\r\n      )\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: \"300px\",\r\n            marginBottom: \"300px\"\r\n          }}\r\n        >\r\n          <Container align=\"center\">\r\n            <CircularProgress />\r\n          </Container>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { branches: state.branches[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateBranches, showBranches })(\r\n  BranchEdit\r\n)\r\n","import React from \"react\"\r\nimport BranchForm from \"../Layouts/branchform\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\n\r\nimport { createBranches } from \"../../actions/branchesActions\"\r\n\r\nconst BranchCreate = props => {\r\n  return (\r\n    <Container maxWidth=\"xl\" align=\"center\" bgcolor=\"secondary\">\r\n      <Typography\r\n        // color=\"primary\"\r\n        variant=\"h4\"\r\n        component=\"h3\"\r\n        style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n      >\r\n        Add a Branch\r\n      </Typography>\r\n      <br></br>\r\n      <BranchForm onSubmit={props.createBranches} id=\"\"></BranchForm>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default connect(null, { createBranches })(BranchCreate)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { Typography, Container, Button } from \"@material-ui/core\"\r\nimport { YellowButton } from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\nimport { fetchTenents, deleteTenents } from \"../../actions/TenentsActions\"\r\nimport { fetchBranches } from \"../../actions/branchesActions\"\r\nimport TenentsList from \"../Layouts/tennetsList\"\r\n\r\nclass Tenents extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchTenents(this.props.history)\r\n    this.props.fetchBranches([\"_id\", \"name\"])\r\n  }\r\n  editButton = tenent => {\r\n    return (\r\n      <YellowButton href={`/tenents/edit/${tenent._id}`}>Edit</YellowButton>\r\n    )\r\n  }\r\n  deleteButton = tenent => {\r\n    return (\r\n      <DeleteButton\r\n        onClickMethod={() => {\r\n          this.props.deleteTenents(tenent._id)\r\n        }}\r\n      ></DeleteButton>\r\n    )\r\n  }\r\n  handleClick(offset) {\r\n    this.setState({ offset })\r\n  }\r\n  render() {\r\n    let buttonArray = []\r\n    buttonArray[0] = this.editButton\r\n    buttonArray[1] = this.deleteButton\r\n    return (\r\n      <Container maxWidth=\"md\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Tenants\r\n        </Typography>\r\n        {!this.props.errors.noRecords && (\r\n          <Fragment>\r\n            <TenentsList\r\n              tenents={this.props.tenents}\r\n              branches={this.props.branches}\r\n              buttons={buttonArray}\r\n            ></TenentsList>\r\n          </Fragment>\r\n        )}\r\n        {this.props.errors.noRecords && (\r\n          <Fragment>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h3\"\r\n              style={{ marginTop: \"150px\", marginBottom: \"150px\" }}\r\n            >\r\n              NO TENENTS ADDED\r\n            </Typography>\r\n          </Fragment>\r\n        )}\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ marginTop: \"30px\" }}\r\n          href=\"/tenents/new\"\r\n        >\r\n          Add tenant\r\n        </Button>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    branches: state.branches,\r\n    tenents: state.tenents,\r\n    errors: state.errors\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  fetchTenents,\r\n  deleteTenents,\r\n  fetchBranches\r\n})(Tenents)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  Container,\r\n  Typography,\r\n  CircularProgress,\r\n  Button,\r\n  Paper\r\n} from \"@material-ui/core\"\r\nimport { showTenents } from \"../../actions/TenentsActions\"\r\n\r\nclass ShowTenents extends Component {\r\n  componentDidMount() {\r\n    this.props.showTenents(this.props.match.params.id)\r\n  }\r\n  render() {\r\n    let tenent = this.props.tenents[this.props.match.params.id]\r\n    console.log(tenent)\r\n    if (!tenent) {\r\n      return <CircularProgress></CircularProgress>\r\n    } else {\r\n      return (\r\n        <Container maxWidth=\"md\" align=\"center\">\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{\r\n              marginTop: \"20px\",\r\n              marginBottom: \"30px\",\r\n              textTransform: \"capitalize\"\r\n            }}\r\n          >\r\n            Profile\r\n          </Typography>\r\n          <Paper style={{ padding: \"30px\" }}>\r\n            <img\r\n              src={tenent.image}\r\n              alt={tenent.name}\r\n              style={{ height: \"200px\", width: \"200px\" }}\r\n            ></img>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              <b>Name:</b>\r\n              {tenent.name}\r\n              <br></br>\r\n              <b>Branch:</b>\r\n              {tenent.BranchName}\r\n              <br></br>\r\n              <b>Room:</b>\r\n              {tenent.room}\r\n              <br></br>\r\n              <b>Mail:</b>\r\n              {tenent.mail}\r\n              <br></br>\r\n              <b>Mobile:</b>\r\n              {tenent.number}\r\n              <br></br>\r\n              <b>Adhaar:</b>\r\n              {tenent.adhar}\r\n              <br></br>\r\n              <b>Occupation:</b>\r\n              {tenent.occupation}\r\n              <br></br>\r\n              <b>Gaurdian Name:</b>\r\n              {tenent.gaurdianName}\r\n              <br></br>\r\n              <b>Gaurdian Number:</b>\r\n              {tenent.gaurdianNumber}\r\n              <br></br>\r\n              <b>Gaurdian Address:</b>\r\n              {tenent.gaurdianAddress}\r\n            </Typography>\r\n          </Paper>\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            href=\"/tenents\"\r\n            style={{ marginTop: \"20px\" }}\r\n          >\r\n            Done\r\n          </Button>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { tenents: state.tenents }\r\n}\r\n\r\nexport default connect(mapStateToProps, { showTenents })(ShowTenents)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\"\r\nimport { Button, Paper, Typography, Grid } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport FileBase from \"react-file-base64\"\r\nimport {\r\n  TextFieldComponent,\r\n  renderOptions,\r\n  renderFromHelper\r\n} from \"../utilities/FieldComponets\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Repeator } from \"../utilities/styledComponents\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\n\r\nconst fullStyle = {\r\n  backgroundColor: \"#9e9e9e\",\r\n  width: \"200px\"\r\n}\r\n\r\nconst clickedStyle = {\r\n  backgroundColor: \"#bbdefb\",\r\n  // backgroundColor: \"#ef9a9a\",\r\n  width: \"250px\"\r\n  // height: \"140````````px\"\r\n}\r\nconst unclickedStyle = {\r\n  width: \"200px\"\r\n}\r\n\r\nclass TenentForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { selected: null }\r\n    this.count = null\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selectedBranch !== prevProps.selectedBranch) {\r\n      this.props.showBranches(this.props.selectedBranch)\r\n    }\r\n    if (this.props.initialValues && this.count === null) {\r\n      console.log(\"im in didmunt\")\r\n      this.setState({ selected: this.props.initialValues.roomNumber })\r\n      this.count = 1\r\n      console.log(this.state)\r\n    }\r\n  }\r\n  inputFieldComponent = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  }) => {\r\n    return (\r\n      <Fragment>\r\n        <FileBase\r\n          type=\"file\"\r\n          multiple={false}\r\n          error={touched && invalid}\r\n          onDone={files => {\r\n            console.log(files)\r\n            input.value = files.base64\r\n            input.onChange(input.value)\r\n          }}\r\n        />\r\n        <img\r\n          src={input.value}\r\n          alt=\"upload image\"\r\n          style={{ height: \"200px\", width: \"200px\" }}\r\n        ></img>\r\n        {renderFromHelper({ touched, error })}\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  styleProvider = room => {\r\n    if (!this.props.initialValues) {\r\n      if (room.vacancies > 0) {\r\n        console.log(room)\r\n        if (this.state.selected === room._id) {\r\n          return clickedStyle\r\n        }\r\n        return unclickedStyle\r\n      }\r\n      return fullStyle\r\n    } else {\r\n      if (this.state.selected === room._id) {\r\n        return clickedStyle\r\n      }\r\n      return unclickedStyle\r\n    }\r\n  }\r\n\r\n  roomFieldComponent = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  }) => {\r\n    let roomFloors = this.props.branches[this.props.selectedBranch].rooms\r\n    return (\r\n      // all rooms\r\n      <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n        {roomFloors.map(rooms => {\r\n          return (\r\n            //per floor\r\n            <Grid item key={rooms[0]}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                key={rooms[0]}\r\n              >\r\n                <Typography component=\"p\" variant=\"subtitle1\">\r\n                  Floor {rooms[0]}:\r\n                </Typography>\r\n                {rooms.map(room => {\r\n                  return (\r\n                    //per room\r\n                    <Grid item key={room._id}>\r\n                      {room &&\r\n                        typeof room === \"object\" &&\r\n                        room.constructor === Object && (\r\n                          <Fragment>\r\n                            <Paper\r\n                              style={this.styleProvider(room)}\r\n                              onClick={() => {\r\n                                if (\r\n                                  room.vacancies > 0 ||\r\n                                  (this.props.initialValues &&\r\n                                    this.props.initialValues.roomNumber ===\r\n                                      room._id)\r\n                                ) {\r\n                                  this.setState({ selected: room._id })\r\n                                  input.onChange(room._id)\r\n                                }\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"subtitle1\" component=\"p\">\r\n                                <b>Room Number:</b>\r\n                                {room.number}\r\n                                <br></br>\r\n                                <b>Fee:</b>\r\n                                {room.fee}\r\n                                <br></br>\r\n                                <b>A/C:</b>\r\n                                {room.AC ? \"available\" : \"not available\"}\r\n                                <br></br>\r\n                                <Grid container justify=\"center\">\r\n                                  <Grid item>\r\n                                    <b>beds:</b>\r\n                                  </Grid>\r\n                                  <Grid item>\r\n                                    <Repeator\r\n                                      number={room.beds}\r\n                                      vacancies={room.vacancies}\r\n                                    ></Repeator>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Typography>\r\n                            </Paper>\r\n                          </Fragment>\r\n                        )}\r\n                    </Grid>\r\n                  )\r\n                })}\r\n              </Grid>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.history)\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(formValues => {\r\n          formValues = {\r\n            ...formValues,\r\n            BranchName: this.props.branches[formValues.Branch].name\r\n          }\r\n          this.props.onSubmit(formValues, this.props.history, this.props.id)\r\n        })}\r\n      >\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h5\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          enter tenant details\r\n        </Typography>\r\n        <br></br>\r\n        {/* name */}\r\n        <Field\r\n          name=\"name\"\r\n          label=\"Enter the Tenent name\"\r\n          component={TextFieldComponent}\r\n          size=\"md\"\r\n          variant=\"outlined\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* mail */}\r\n\r\n        <Field\r\n          name=\"mail\"\r\n          label=\"Enter the email id\"\r\n          component={TextFieldComponent}\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* date */}\r\n        <Field\r\n          name=\"date\"\r\n          size=\"md\"\r\n          label=\"add date\"\r\n          type=\"date\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          component={TextFieldComponent}\r\n        />\r\n        <br></br>\r\n\r\n        {/* number */}\r\n        <Field\r\n          name=\"number\"\r\n          label=\"Enter mobile number\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* advance */}\r\n\r\n        <Field\r\n          name=\"advance\"\r\n          label=\"Advance\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          size=\"sm\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* adhar */}\r\n        <Field\r\n          name=\"adhar\"\r\n          label=\"Enter aadhar\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* occupation */}\r\n        <Field\r\n          name=\"occupation\"\r\n          label=\"Enter Occupation\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* gaurdian */}\r\n        <Field\r\n          name=\"gaurdianName\"\r\n          label=\"Enter the Tenent name\"\r\n          component={TextFieldComponent}\r\n          size=\"md\"\r\n          variant=\"outlined\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* gaurdainanumber */}\r\n        <Field\r\n          name=\"gaurdianNumber\"\r\n          label=\"Enter gaurdian mobile number\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* gaurdianaddress */}\r\n        <Field\r\n          name=\"gaurdianAddress\"\r\n          label=\"Enter Gaurdian address\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n          multiline\r\n          rowsMax=\"4\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* tenent image */}\r\n        <Field\r\n          name=\"image\"\r\n          label=\"upload an image\"\r\n          component={this.inputFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <br></br>\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h5\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          select a room\r\n        </Typography>\r\n        {/* branch*/}\r\n        {renderOptions(this.props.branches)}\r\n        <br></br>\r\n        {this.props.selectedBranch &&\r\n          this.props.branches[this.props.selectedBranch] &&\r\n          this.props.branches[this.props.selectedBranch].rooms &&\r\n          Array.isArray(\r\n            this.props.branches[this.props.selectedBranch].rooms[0]\r\n          ) && (\r\n            <Field\r\n              name=\"roomNumber\"\r\n              label=\"select a room\"\r\n              component={this.roomFieldComponent}\r\n            ></Field>\r\n          )}\r\n        {/* {console.log(this.props)} */}\r\n        {/* submit button` */}\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          style={{ marginTop: \"30px\" }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    \"name\",\r\n    \"mail\",\r\n    \"date\",\r\n    \"advance\",\r\n    \"adhar\",\r\n    \"number\",\r\n    \"occupation\",\r\n    \"gaurdianName\",\r\n    \"gaurdianAddress\",\r\n    \"gaurdianNumber\",\r\n    \"image\"\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (values.number && !values.number.toString().match(/^\\d{10}$/)) {\r\n    errors.number = \"invalid phone number\"\r\n  }\r\n  if (\r\n    values.gaurdiannumber &&\r\n    !values.gaurdianNumber.toString().match(/^\\d{10}$/)\r\n  ) {\r\n    errors.gaurdianNumber = \"invalid phone number\"\r\n  }\r\n  if (\r\n    values.mail &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.mail)\r\n  ) {\r\n    errors.mail = \"Invalid email address\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst selector = formValueSelector(\"tenentForm\")\r\n\r\nconst mapStateToProps = state => {\r\n  const selectedBranch = selector(state, \"Branch\")\r\n  return { selectedBranch, branches: state.branches }\r\n}\r\n\r\nexport default connect(mapStateToProps, { showBranches })(\r\n  reduxForm({ form: \"tenentForm\", validate })(withRouter(TenentForm))\r\n)\r\n","import React, { Component } from \"react\"\r\nimport TenentForm from \"../Layouts/tenentsForm\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\nimport { showTenents, updateTenents } from \"../../actions/TenentsActions\"\r\nimport { fetchBranches } from \"../../actions/branchesActions\"\r\n\r\nclass TenentsEdit extends Component {\r\n  componentDidMount() {\r\n    this.props.showTenents(this.props.match.params.id)\r\n    this.props.fetchBranches([\"_id\", \"name\", \"rooms\", \"floors\"])\r\n  }\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"xl\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Add a Tenent\r\n        </Typography>\r\n        <br></br>\r\n        <TenentForm\r\n          onSubmit={(values, id) => this.props.updateTenents(values, id)}\r\n          initialValues={this.props.tenents[this.props.match.params.id]}\r\n          branches={this.props.branches}\r\n          id={this.props.match.params.id}\r\n        ></TenentForm>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { tenents: state.tenents, branches: state.branches }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  showTenents,\r\n  updateTenents,\r\n  fetchBranches\r\n})(TenentsEdit)\r\n","import React from \"react\"\r\nimport TenentForm from \"../Layouts/tenentsForm\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\nimport { createTenents } from \"../../actions/TenentsActions\"\r\nimport { fetchBranches } from \"../../actions/branchesActions\"\r\n\r\nclass TenentCreate extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchBranches([\"_id\", \"name\", \"rooms\", \"floors\"])\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"xl\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Add a Tenent\r\n        </Typography>\r\n        <br></br>\r\n        <TenentForm\r\n          onSubmit={this.props.createTenents}\r\n          branches={this.props.branches}\r\n        ></TenentForm>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { branches: state.branches }\r\n}\r\nexport default connect(mapStateToProps, { createTenents, fetchBranches })(\r\n  TenentCreate\r\n)\r\n","import React from \"react\"\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1>rooms</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm, FieldArray } from \"redux-form\"\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Radio,\r\n  CircularProgress,\r\n  Grid\r\n} from \"@material-ui/core\"\r\nimport {\r\n  TextFieldComponent,\r\n  radioButtonComponent,\r\n  DeleteButton\r\n} from \"../utilities/FieldComponets\"\r\nimport { GreyPaper, GreenButton } from \"../utilities/styledComponents\"\r\nimport { connect } from \"react-redux\"\r\nimport { deleteRoomsAction } from \"../../actions/roomsActions\"\r\n\r\n//class declaration\r\n\r\nclass RoomForm extends Component {\r\n  //field array\r\n\r\n  fieldArrayComponent = ({ fields }) => {\r\n    return (\r\n      <ul style={{ listStyle: \"none\" }}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"center\"\r\n        >\r\n          {fields.map((room, index) => (\r\n            <Grid item>\r\n              <GreyPaper>\r\n                <li key={index}>\r\n                  {/* title */}\r\n                  <Typography \r\n                  // color=\"primary\"\r\n                   variant=\"h6\" gutterBottom>\r\n                    Room #{index + 1}\r\n                  </Typography>\r\n\r\n                  {/* Name */}\r\n                  <Field\r\n                    name={`${room}.number`}\r\n                    label=\"enter room number\"\r\n                    component={TextFieldComponent}\r\n                    size=\"sm\"\r\n                  ></Field>\r\n\r\n                  {/* floor number */}\r\n                  <Field\r\n                    name={`${room}.floor`}\r\n                    label=\"floor\"\r\n                    type=\"number\"\r\n                    size=\"xs\"\r\n                    min=\"1\"\r\n                    component={TextFieldComponent}\r\n                  ></Field>\r\n\r\n                  {/* Number of beds */}\r\n                  <Field\r\n                    name={`${room}.beds`}\r\n                    label=\"beds\"\r\n                    type=\"number\"\r\n                    size=\"xs\"\r\n                    min=\"1\"\r\n                    component={TextFieldComponent}\r\n                  ></Field>\r\n\r\n                  {/* fee */}\r\n                  <Field\r\n                    name={`${room}.fee`}\r\n                    label=\"enter amount of fee\"\r\n                    type=\"number\"\r\n                    size=\"sm\"\r\n                    component={TextFieldComponent}\r\n                  ></Field>\r\n\r\n                  {/* AC */}\r\n                  <Field name={`${room}.AC`} component={radioButtonComponent}>\r\n                    <Radio value={true} label=\"YES\" />\r\n                    <Radio value={false} label=\"NO\" />\r\n                  </Field>\r\n                  <br></br>\r\n\r\n                  {/* save button */}\r\n                  <GreenButton\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    onClick={this.props.handleSubmit(() => {\r\n                      this.props.onSubmit(this.props.id, fields.get(index))\r\n                      fields.remove(index)\r\n                    })}\r\n                  >\r\n                    save\r\n                  </GreenButton>\r\n\r\n                  {/* remove button */}\r\n                  <DeleteButton\r\n                    onClickMethod={() => {\r\n                      fields.remove(index)\r\n                    }}\r\n                  ></DeleteButton>\r\n                </li>\r\n              </GreyPaper>\r\n            </Grid>\r\n          ))}\r\n\r\n          {/* Add new Button */}\r\n          <Grid item>\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => fields.push({})}\r\n            >\r\n              Add New Room\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  //render\r\n  render() {\r\n    if (this.props.branches) {\r\n      return (\r\n        <Fragment>\r\n          <form>\r\n            <FieldArray\r\n              name=\"rooms\"\r\n              component={this.fieldArrayComponent}\r\n            ></FieldArray>\r\n          </form>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return <CircularProgress />\r\n    }\r\n  }\r\n}\r\n\r\n//validations\r\nconst validate = (values, props) => {\r\n  const errors = {}\r\n  const roomArrayErrors = []\r\n  if (!values.rooms || !values.rooms.length) {\r\n    errors.rooms = { _errors: \"Atleast one room must be added\" }\r\n  } else {\r\n    values.rooms.forEach((room, roomIndex) => {\r\n      const roomErrors = {}\r\n      if (props.branches[props.id]) {\r\n        for (let i = 0; i < props.branches[props.id].rooms.length; i++) {\r\n          if (room.number === props.branches[props.id].rooms[i].number) {\r\n            roomErrors.number = \"already exists\"\r\n            roomArrayErrors[roomIndex] = roomErrors\r\n          }\r\n        }\r\n      }\r\n      if (!room || !room.number) {\r\n        roomErrors.number = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (!room || !room.floor) {\r\n        roomErrors.floor = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (props.branches[props.id]) {\r\n        if (room.floor > props.branches[props.id].floors) {\r\n          roomErrors.floor = \"Not a valid floor\"\r\n          roomArrayErrors[roomIndex] = roomErrors\r\n        }\r\n      }\r\n      if (!room || !room.beds) {\r\n        roomErrors.beds = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (!room || !room.fee) {\r\n        roomErrors.fee = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (room.floor < 1) {\r\n        roomErrors.floor = \"not a valid number\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (room.beds < 1) {\r\n        roomErrors.beds = \"not a valid number\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (room.fee < 1) {\r\n        roomErrors.fee = \"not a valid number\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n    })\r\n  }\r\n  if (roomArrayErrors.length) {\r\n    errors.rooms = roomArrayErrors\r\n  }\r\n  return errors\r\n}\r\n\r\n//config and exports\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches,\r\n    initalValues: { rooms: ownProps.initialValues }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { deleteRoomsAction })(\r\n  reduxForm({ form: \"roomForm\", validate })(RoomForm)\r\n)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container, Typography, Button, Grid } from \"@material-ui/core\"\r\nimport _ from \"lodash\"\r\nimport {\r\n  createRoomsAction,\r\n  deleteRoomsAction\r\n} from \"../../actions/roomsActions\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\nimport RoomForm from \"../Layouts/roomForm\"\r\nimport { GreyPaper, YellowButton } from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\nimport img from \"../../nodata.png\"\r\n\r\n//  rooms Create\r\n\r\nclass RoomsCreate extends Component {\r\n  //didmount\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n  }\r\n\r\n  //rendering list of added rooms\r\n  renderList() {\r\n    let rooms = Object.keys(this.props.rooms)\r\n\r\n    //adding rooms\r\n    if (rooms.length) {\r\n      return (\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          {/* heading */}\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n          >\r\n            Added Rooms\r\n          </Typography>\r\n\r\n          {/* List of rooms */}\r\n          <ul style={{ listStyle: \"none\" }}>\r\n            {rooms.map(room => {\r\n              room = this.props.rooms[room]\r\n              return (\r\n                <li key={room._id}>\r\n                  <GreyPaper>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        <Typography\r\n                          //  color=\"primary\"\r\n                          variant=\"subtitle1\"\r\n                        >\r\n                          <b>room number:</b>\r\n                          {room.number}\r\n                          <b style={{ marginLeft: \"30px\" }}>floor:</b>\r\n                          {room.floor}\r\n                          <b style={{ marginLeft: \"30px\" }}>beds:</b>\r\n                          {room.beds}\r\n                          <b style={{ marginLeft: \"30px\" }}>rent:</b>\r\n                          {room.fee}\r\n                          <b style={{ marginLeft: \"30px\" }}>A/C:</b>\r\n                          {room.AC ? \"available\" : \"not available\"}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <YellowButton\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          href={`/branches/${this.props.match.params.id}/rooms/edit/${room._id}`}\r\n                        >\r\n                          Edit\r\n                        </YellowButton>\r\n                        <DeleteButton\r\n                          onClickMethod={() => {\r\n                            this.props.deleteRoomsAction(\r\n                              this.props.match.params.id,\r\n                              room._id\r\n                            )\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </DeleteButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </GreyPaper>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </Container>\r\n      )\r\n    } else {\r\n      return (\r\n        <Container align=\"center\">\r\n          <img alt=\"no rooms added\" src={img}></img>\r\n          <Typography\r\n            //  color=\"primary\"\r\n            variant=\"subtitle1\"\r\n          >\r\n            No rooms are added yet\r\n          </Typography>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n  renderDone = () => {\r\n    if (!_.isEmpty(this.props.branches)) {\r\n      if (\r\n        this.props.branches[this.props.match.params.id].rooms.length ||\r\n        !_.isEmpty(this.props.rooms)\r\n      ) {\r\n        return (\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            href=\"/branches\"\r\n          >\r\n            Done!\r\n          </Button>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <Fragment>\r\n        {this.renderList()}\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <br></br>\r\n          <RoomForm\r\n            onSubmit={this.props.createRoomsAction}\r\n            id={this.props.match.params.id}\r\n          ></RoomForm>\r\n          <br></br>\r\n          {this.renderDone()}\r\n        </Container>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches,\r\n    rooms: state.rooms\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  showBranches,\r\n  createRoomsAction,\r\n  deleteRoomsAction\r\n})(RoomsCreate)\r\n","import React, { Component } from \"react\"\r\nimport { Button, Radio, Grid } from \"@material-ui/core\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport {\r\n  TextFieldComponent,\r\n  radioButtonComponent\r\n} from \"../utilities/FieldComponets\"\r\n\r\nclass RoomEditForm extends Component {\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(values => {\r\n          console.log(\"im pressed\")\r\n          this.props.editRoomsAction(this.props.id, this.props.rid, values)\r\n        })}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          style={{ marginTop: \"25px\" }}\r\n        >\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"sm\"\r\n              name=\"number\"\r\n              label=\"enter room number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"xs\"\r\n              name=\"floor\"\r\n              label=\"floor\"\r\n              type=\"number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"xs\"\r\n              name=\"beds\"\r\n              label=\"beds\"\r\n              type=\"number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"sm\"\r\n              name=\"fee\"\r\n              label=\"enter amount of fee\"\r\n              type=\"number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field name=\"AC\" component={radioButtonComponent}>\r\n              <Radio value={true} label=\"YES\" />\r\n              <Radio value={false} label=\"NO\" />\r\n            </Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              type=\"submit\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (values, props) => {\r\n  const errors = {}\r\n  const requiredFields = [\"number\", \"fee\", \"beds\", \"AC\", \"floor\"]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (props.branches) {\r\n    if (values[\"floor\"] > props.branches.floors) {\r\n      errors[\"floor\"] = \"Not a valid floor\"\r\n    }\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default reduxForm({ form: \"roomEditForm\", validate })(RoomEditForm)\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\nimport RoomEditForm from \"../Layouts/roomEditForm\"\r\nimport { editRoomsAction, showRoomsAction } from \"../../actions/roomsActions\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\n\r\nclass RoomsCreate extends Component {\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n    this.props.showRoomsAction(\r\n      this.props.match.params.id,\r\n      this.props.match.params.rid\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"xl\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Edit Room\r\n        </Typography>\r\n        <RoomEditForm\r\n          initialValues={this.props.rooms}\r\n          branches={this.props.branches}\r\n          id={this.props.match.params.id}\r\n          rid={this.props.match.params.rid}\r\n          editRoomsAction={this.props.editRoomsAction}\r\n        ></RoomEditForm>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches[ownProps.match.params.id],\r\n    rooms: state.rooms[ownProps.match.params.rid]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  showBranches,\r\n  showRoomsAction,\r\n  editRoomsAction\r\n})(RoomsCreate)\r\n","import React from \"react\"\r\nimport Header from \"./Layouts/header\"\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport Home from \"./basic/home\"\r\nimport Login from \"./basic/login\"\r\nimport Verify from \"./basic/verify\"\r\nimport Register from \"./basic/register\"\r\nimport Balance from \"./basic/balance\"\r\nimport Branches from \"./branches/branches\"\r\nimport BranchesShow from \"./branches/branchesShow\"\r\nimport BranchesEdit from \"./branches/branchesEdit\"\r\nimport BranchesCreate from \"./branches/branchesCreate\"\r\nimport Tenents from \"./tenents/tenents\"\r\nimport TenentsShow from \"./tenents/tenentsShow\"\r\nimport TenentsEdit from \"./tenents/tenentsEdit\"\r\nimport TenentsCreate from \"./tenents/tenentsCreate\"\r\nimport Rooms from \"./rooms/rooms\"\r\nimport RoomsCreate from \"./rooms/roomsCreate\"\r\nimport RoomsEdit from \"./rooms/roomsEdit\"\r\n// \"#006064\"-aqaua-#e0f7fa\r\n//\"#01579b\"-blue-\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#428e92\",\r\n      main: \"#138496\",\r\n      dark: \"#00363a\",\r\n      contrastText: \"white\"\r\n    },\r\n    secondary: {\r\n      light: \"#92ffc6\",\r\n      main: \"#f64b3c\",\r\n      dark: \"#1aa867\",\r\n      contrastText: \"#000\"\r\n    },\r\n    background: \"#5cdb95\"\r\n  }\r\n})\r\nexport default () => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Header></Header>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" exact component={Register} />\r\n      <Route path=\"/verify/:value/:id\" exact component={Verify} />\r\n      <Route path=\"/branches\" exact component={Branches} />\r\n      <Route path=\"/branches/new\" exact component={BranchesCreate} />\r\n      <Route path=\"/branches/show/:id\" exact component={BranchesShow} />\r\n      <Route path=\"/branches/edit/:id\" exact component={BranchesEdit} />\r\n      <Route path=\"/branches/:id/rooms\" exact component={Rooms} />\r\n      <Route path=\"/branches/:id/rooms/new\" exact component={RoomsCreate} />\r\n      <Route path=\"/branches/:id/rooms/edit/:rid\" exact component={RoomsEdit} />\r\n      <Route path=\"/tenents\" exact component={Tenents} />\r\n      <Route path=\"/tenents/show/:id\" exact component={TenentsShow} />\r\n      <Route path=\"/tenents/new\" exact component={TenentsCreate} />\r\n      <Route path=\"/tenents/edit/:id\" exact component={TenentsEdit} />\r\n      <Route path=\"/balances\" exact component={Balance} />\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport reducers from \"./reducers\"\nimport Thunk from \"redux-thunk\"\nimport jwt_decode from \"jwt-decode\"\nimport setAuthToken from \"./api/setAuthToken\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { setCurrentUser } from \"./actions/authActions\"\nimport App from \"./components/App\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(Thunk)))\n\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken)\n  const decodedToken = jwt_decode(localStorage.jwtToken)\n  store.dispatch(setCurrentUser(decodedToken))\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"process.env.PUBLIC_URL\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector(\"#root\")\n)\n"],"sourceRoot":""}