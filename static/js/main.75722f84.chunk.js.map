{"version":3,"sources":["assets/maintainence.png","actions/actionTypes.js","reducers/branchesReducer.js","reducers/tenentsReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/balancesReducer.js","reducers/index.js","reducers/roomReducer.js","reducers/spinnerReducer.js","api/backendApi.js","api/setAuthToken.js","actions/spinActions.js","actions/authActions.js","components/Layouts/header.js","components/basic/home.js","components/utilities/styledComponents.js","components/utilities/FieldComponets.js","components/utilities/RenderAlert.js","components/basic/login.js","components/basic/verify.js","components/basic/register.js","components/utilities/Pagination.js","components/Layouts/tennetsList.js","components/basic/balance.js","actions/balancesActions.js","history.js","utilities.js","actions/branchesActions.js","components/Layouts/branchCard.js","components/Layouts/NoRecords.js","components/Layouts/Error.js","components/branches/branches.js","components/Layouts/RenderRooms.js","actions/roomsActions.js","components/branches/branchesShow.js","components/Layouts/branchform.js","components/branches/branchesEdit.js","components/branches/branchesCreate.js","actions/TenentsActions.js","components/tenents/tenents.js","components/tenents/tenentsShow.js","components/Layouts/tenentsForm.js","components/tenents/tenentsEdit.js","components/tenents/tenentsCreate.js","components/rooms/rooms.js","components/Layouts/roomForm.js","components/rooms/roomsCreate.js","components/Layouts/roomEditForm.js","components/rooms/roomsEdit.js","components/utilities/PrivateRoute.js","components/App.js","index.js","assets/nodata.png"],"names":["module","exports","ERROR","flooring","branches","sortedRooms","i","floors","rooms","room","floor","push","branchesReducer","state","action","type","_","mapKeys","payload","_id","omit","tenentsReducer","errorReducer","error","initialState","isAuthenticated","user","isVerified","appReducer","combineReducers","form","formReducer","tenents","errors","auth","isEmpty","blances","spinner","console","log","balances","noRecords","isSpinning","rootReducer","axios","create","baseURL","setAuthToken","token","backend","defaults","headers","common","startSpinningAction","dispatch","stopSpinningAction","setCurrentUser","decoded","Header","buttonRender","props","Button","onClick","logoutUser","history","color","style","marginLeft","to","textDecoration","match","this","env","process","AppBar","position","Toolbar","Grid","container","justify","alignItems","item","IconButton","edge","aria-label","Typography","variant","Paper","backgroundColor","component","marginTop","marginBottom","React","Component","connect","localStorage","removeItem","withRouter","GreyPaper","withStyles","root","background","borderRadius","border","height","padding","boxShadow","label","textTransform","paddingBottom","paddingRight","paddingLeft","Repeator","createArray","number","a","filled","vacancies","direction","map","el","marginRight","RedButton","margin","GreenButton","YellowButton","XsTextField","width","TextField","SmTextField","StyledSelect","Select","MdTextField","Spinner","card","maxWidth","media","display","flexDirection","flexWrap","justifyContent","CircularProgress","top","left","TextFieldComponent","input","meta","touched","invalid","custom","size","placeholder","helperText","radioButtonComponent","selectedValue","value","FormControl","FormLabel","RadioGroup","name","onChange","row","FormControlLabel","control","Radio","labelPlacement","checked","DeleteButton","onClickMethod","renderFromHelper","FormHelperText","renderSelectField","children","InputLabel","htmlFor","native","inputProps","id","data","Login","Container","align","location","redirect","RenderAlert","msg","onSubmit","handleSubmit","formValues","loginUser","Field","values","post","then","res","setItem","decodedToken","jwt_decode","catch","err","response","reduxForm","validate","forEach","field","mail","test","Verify","verifyAccount","rand","params","verified","Register","registerUser","provideError","Pagination","renderButtons","start","end","arr","Array","from","x","index","currentPage","e","buttonClicked","setState","pagesRender","totalPages","table","totalRecords","FirstPage","NavigateBefore","NavigateNext","LastPage","Tenents","buttons","tenent","button","key","otherFields","fields","handleChange","paginatedTenents","Object","perPage","slice","renderContent","List","ListItem","ListItemAvatar","Avatar","alt","src","image","ListItemText","primary","secondary","Fragment","BranchName","ListItemSecondaryAction","Divider","Math","ceil","keys","length","cp","noTenents","Balances","paidButton","payRent","fetchBalances","isSpinner","get","put","createHistory","urlEncoder","str","join","fetchBranches","showBranches","RenderCard","deleteMethod","branch","Card","CardActionArea","CardMedia","title","CardContent","gutterBottom","address","CardActions","img","message","Branches","deleteBranches","branchesValues","isLoading","showRecords","showErrors","NoRecords","spacing","xs","sm","md","postion","bottom","Error","delete","RoomRender","isArray","listStyle","constructor","fee","AC","beds","window","reload","RenderRooms","deleteRoomsAction","rid","ShowBranch","careTaker","ownProps","BranchForm","inputFieldComponent","multiple","onDone","files","base64","multiline","rowsMax","toString","BranchEdit","updateBranches","initialValues","pick","createBranches","bgcolor","showTenents","date","editButton","deleteButton","deleteTenents","fetchTenents","offset","buttonArray","ShowTenents","adhar","occupation","gaurdianName","gaurdianNumber","gaurdianAddress","fullStyle","clickedStyle","unclickedStyle","TenentForm","styleProvider","selected","roomFieldComponent","roomFloors","selectedBranch","roomNumber","count","prevProps","Branch","InputLabelProps","shrink","branchesArr","renderOptions","selector","formValueSelector","gaurdiannumber","TenentsEdit","updateTenents","TenentCreate","createTenents","goBack","RoomForm","fieldArrayComponent","min","remove","FieldArray","initalValues","roomArrayErrors","roomIndex","roomErrors","_errors","RoomsCreate","renderDone","renderList","createRoomsAction","RoomEditForm","editRoomsAction","showRoomsAction","PrivateRoute","rest","render","pathname","theme","createMuiTheme","palette","light","main","dark","contrastText","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","Thunk","jwtToken","ReactDOM","basename","path","exact","Home","BranchesCreate","BranchesShow","BranchesEdit","Rooms","RoomsEdit","TenentsShow","TenentsCreate","Balance","document","querySelector"],"mappings":"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","file":"static/js/main.75722f84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maintainence.7bcadaa3.png\";","export const FETCH_BRANCH = \"fetchBranch\"\r\nexport const DELETE_BRANCH = \"deleteBranch\"\r\nexport const UPDATE_BRANCH = \"updateBranch\"\r\nexport const SHOW_BRANCH = \"showBranch\"\r\nexport const CREATE_BRANCH = \"createBranch\"\r\nexport const DELETE_ROOMS = \"deleteRooms\"\r\nexport const CREATE_ROOMS = \"createRooms\"\r\nexport const EDIT_ROOMS = \"editRooms\"\r\nexport const SHOW_ROOMS = \"showRooms\"\r\nexport const DELETE_TENENTS = \"deleteTenents\"\r\nexport const CREATE_TENENTS = \"createTenents\"\r\nexport const EDIT_TENENTS = \"editTenents\"\r\nexport const SHOW_TENENTS = \"showTenents\"\r\nexport const FETCH_TENENTS = \"fetchTenents\"\r\nexport const GET_ERRORS = \"getErrors\"\r\nexport const SET_USER = \"setUser\"\r\nexport const UNAUTHORIZED = \"unauthorized\"\r\nexport const NORECORDS = \"noRecord\"\r\nexport const FETCH_BALANCES = \"fetchBalances\"\r\nexport const PAID_RENT = \"paidRent\"\r\nexport const ERROR = \"error\"\r\nexport const LOG_OUT = \"logout\"\r\nexport const IS_SPINNING = \"spinOn\"\r\nexport const NOT_SPINNING = \"spinOff\"\r\n","import _ from \"lodash\"\r\nimport {\r\n  FETCH_BRANCH,\r\n  SHOW_BRANCH,\r\n  DELETE_BRANCH,\r\n  UPDATE_BRANCH,\r\n  CREATE_BRANCH\r\n} from \"../actions/actionTypes\"\r\n\r\nconst flooring = branches => {\r\n  let sortedRooms = []\r\n  for (let i = 0; i < branches.floors; i++) {\r\n    sortedRooms[i] = [i + 1]\r\n  }\r\n  let rooms = branches.rooms\r\n  for (let room of rooms) {\r\n    sortedRooms[room.floor - 1].push(room)\r\n  }\r\n  branches.rooms = sortedRooms\r\n  return branches\r\n}\r\n\r\nconst branchesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BRANCH:\r\n      return { ...state, ..._.mapKeys(action.payload, \"_id\") }\r\n    case CREATE_BRANCH:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case SHOW_BRANCH:\r\n      action.payload = flooring(action.payload)\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case UPDATE_BRANCH:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case DELETE_BRANCH:\r\n      return _.omit(state, action.payload._id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default branchesReducer\r\n","import _ from \"lodash\"\r\nimport {\r\n  FETCH_TENENTS,\r\n  SHOW_TENENTS,\r\n  DELETE_TENENTS,\r\n  EDIT_TENENTS,\r\n  CREATE_TENENTS\r\n} from \"../actions/actionTypes\"\r\n\r\nconst tenentsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_TENENTS:\r\n      return { ...state, ..._.mapKeys(action.payload, \"_id\") }\r\n    case CREATE_TENENTS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case SHOW_TENENTS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case EDIT_TENENTS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case DELETE_TENENTS:\r\n      return _.omit(state, action.payload._id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tenentsReducer\r\n","import { GET_ERRORS, ERROR } from \"../actions/actionTypes\"\r\n\r\nconst errorReducer = (\r\n  state = {\r\n    error: false\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return { ...state, ...action.payload }\r\n    case ERROR:\r\n      return { ...state, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default errorReducer\r\n","import { SET_USER } from \"../actions/actionTypes\"\r\nimport _ from \"lodash\"\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  isVerified: true\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !_.isEmpty(action.payload),\r\n        user: action.payload,\r\n        isVerified: action.payload.isVerified\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import _ from \"lodash\"\r\nimport { FETCH_BALANCES, PAID_RENT } from \"../actions/actionTypes\"\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BALANCES:\r\n      return { ...state, ..._.mapKeys(action.payload, \"_id\") }\r\n    case PAID_RENT:\r\n      return _.omit(state, action.payload._id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport branchesReducer from \"./branchesReducer\"\r\nimport roomReducer from \"./roomReducer\"\r\nimport tenentsReducer from \"./tenentsReducer\"\r\nimport errorReducer from \"./errorReducer\"\r\nimport authReducer from \"./authReducer\"\r\nimport balancesReducer from \"./balancesReducer\"\r\nimport { LOG_OUT } from \"../actions/actionTypes\"\r\nimport spinnerReducer from \"./spinnerReducer\"\r\n\r\nconst appReducer = combineReducers({\r\n  form: formReducer,\r\n  branches: branchesReducer,\r\n  rooms: roomReducer,\r\n  tenents: tenentsReducer,\r\n  errors: errorReducer,\r\n  auth: authReducer,\r\n  blances: balancesReducer,\r\n  spinner: spinnerReducer\r\n})\r\n\r\nconst initialState = {\r\n  form: {},\r\n  branches: {},\r\n  rooms: {},\r\n  tenents: {},\r\n  errors: {\r\n    balances: {\r\n      noRecords: false\r\n    },\r\n    branches: {\r\n      noRecords: false\r\n    },\r\n    tenents: {\r\n      noRecords: false\r\n    }\r\n  },\r\n  auth: {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    isVerified: true\r\n  },\r\n  blances: {},\r\n  spinner: { isSpinning: false }\r\n}\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === LOG_OUT) {\r\n    state = initialState\r\n  }\r\n  return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer\r\n","import _ from \"lodash\"\r\nimport {\r\n  CREATE_ROOMS,\r\n  EDIT_ROOMS,\r\n  DELETE_ROOMS,\r\n  SHOW_ROOMS\r\n} from \"../actions/actionTypes\"\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_ROOMS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case DELETE_ROOMS:\r\n      return _.omit(state, action.payload._id)\r\n    case SHOW_ROOMS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    case EDIT_ROOMS:\r\n      return { ...state, [action.payload._id]: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { IS_SPINNING, NOT_SPINNING } from \"../actions/actionTypes\"\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type) {\r\n    case IS_SPINNING:\r\n      console.log(\"spinner started\")\r\n      return action.payload\r\n    case NOT_SPINNING:\r\n      console.log(\"spinner stopped\")\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://tranquil-dusk-98551.herokuapp.com/\"\r\n})\r\n","import backend from \"./backendApi\"\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    backend.defaults.headers.common[\"Authorization\"] = token\r\n  } else {\r\n    delete backend.defaults.headers.common[\"Authorization\"]\r\n  }\r\n}\r\n\r\nexport default setAuthToken\r\n","import { IS_SPINNING, NOT_SPINNING } from \"./actionTypes\"\r\n\r\nexport const startSpinningAction = () => dispatch => {\r\n  console.log(\"spinner is called\")\r\n  dispatch({ type: IS_SPINNING, payload: true })\r\n}\r\n\r\nexport const stopSpinningAction = () => dispatch => {\r\n  console.log(\"spinner is stopped\")\r\n  dispatch({ type: NOT_SPINNING, payload: false })\r\n}\r\n","import jwt_decode from \"jwt-decode\"\r\nimport { GET_ERRORS, SET_USER, LOG_OUT, ERROR } from \"./actionTypes\"\r\nimport backend from \"../api/backendApi\"\r\nimport { startSpinningAction, stopSpinningAction } from \"./spinActions\"\r\nimport setAuthToken from \"../api/setAuthToken\"\r\n\r\nexport const registerUser = (values, history) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .post(\"/register\", values)\r\n    .then(res => {\r\n      const { token } = res.data\r\n      localStorage.setItem(\"jwtToken\", token)\r\n      setAuthToken(token)\r\n      const decodedToken = jwt_decode(token)\r\n      dispatch(setCurrentUser(decodedToken))\r\n      stopSpinningAction()\r\n      history.push(\"/\")\r\n    })\r\n    .catch(err => {\r\n      console.log(err.response.data)\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n\r\nexport const loginUser = (values, history) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .post(\"/login\", values)\r\n    .then(res => {\r\n      const { token } = res.data\r\n      localStorage.setItem(\"jwtToken\", token)\r\n      setAuthToken(token)\r\n      const decodedToken = jwt_decode(token)\r\n      dispatch(setCurrentUser(decodedToken))\r\n      stopSpinningAction()\r\n      history.push(\"/\")\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n\r\nexport const verifyAccount = value => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .post(\"/verify\", value)\r\n    .then(res => {\r\n      if (res.data.verified) {\r\n        localStorage.removeItem(\"jwtToken\")\r\n        setAuthToken(false)\r\n        dispatch(setCurrentUser({}))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_USER,\r\n    payload: decoded\r\n  }\r\n}\r\n\r\nexport const logoutUser = history => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\")\r\n  setAuthToken(false)\r\n  dispatch({ type: LOG_OUT, payload: null })\r\n  history.push(\"/\")\r\n}\r\n","import React, { Fragment } from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Paper\r\n} from \"@material-ui/core\"\r\nimport { withRouter, Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport { logoutUser } from \"../../actions/authActions\"\r\n\r\nclass Header extends React.Component {\r\n  buttonRender = () => {\r\n    if (this.props.auth.isAuthenticated) {\r\n      return (\r\n        <Button\r\n          onClick={() => this.props.logoutUser(this.props.history)}\r\n          color=\"inherit\"\r\n          style={{ marginLeft: \"3px\" }}\r\n        >\r\n          Logout\r\n        </Button>\r\n      )\r\n    } else {\r\n      return (\r\n        <Link to=\"/login\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Link>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    console.log({ match: this.props.match, env: process.env.PUBLIC_URL })\r\n    return (\r\n      <Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Grid container justify=\"space-between\" alignItems=\"center\">\r\n              <Grid item>\r\n                <Grid container justify=\"flex-start\" alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Link\r\n                      to=\"/\"\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                      >\r\n                        <MenuIcon />\r\n                      </IconButton>\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"h6\">Hostel Name</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/branches\"\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <Button color=\"inherit\" style={{ marginLeft: \"3px\" }}>\r\n                    Branches\r\n                  </Button>\r\n                </Link>\r\n                <Link\r\n                  to=\"/tenents\"\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <Button color=\"inherit\" style={{ marginLeft: \"3px\" }}>\r\n                    Tenents\r\n                  </Button>\r\n                </Link>\r\n                <Link\r\n                  to=\"/balances\"\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <Button color=\"inherit\" style={{ marginLeft: \"3px\" }}>\r\n                    Balance\r\n                  </Button>\r\n                </Link>\r\n                {this.buttonRender()}\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.props.auth.isVerified === false && (\r\n          <Paper style={{ backgroundColor: \"red\" }}>\r\n            <Typography\r\n              // color=\"primary\"\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n            >\r\n              Please check your mail for verification link\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst MapStateToProps = state => {\r\n  return { auth: state.auth, errors: state.errors }\r\n}\r\nexport default connect(MapStateToProps, { logoutUser })(withRouter(Header))\r\n","import React from \"react\"\r\n\r\nexport default () => {\r\n  return <h1>Home</h1>\r\n}\r\n","import React, { Fragment } from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Select,\r\n  Container,\r\n  CircularProgress\r\n} from \"@material-ui/core\"\r\nimport HotelOutlinedIcon from \"@material-ui/icons/HotelOutlined\"\r\nimport HotelIcon from \"@material-ui/icons/Hotel\"\r\n\r\nexport const StyledButton = withStyles({\r\n  root: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\",\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\"\r\n  }\r\n})(Button)\r\n\r\nexport const GreyPaper = withStyles({\r\n  root: {\r\n    background: \"#bbdefb\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    padding: \"10px\",\r\n    paddingBottom: \"10px\",\r\n    paddingRight: \"25px\",\r\n    paddingLeft: \"25px\"\r\n  }\r\n})(Paper)\r\n\r\nexport class Repeator extends React.Component {\r\n  createArray = number => {\r\n    let a = []\r\n    for (let i = 0; i < number; i++) {\r\n      a[i] = i\r\n    }\r\n    return a\r\n  }\r\n  render() {\r\n    let filled = this.createArray(this.props.number - this.props.vacancies)\r\n    let vacancies = this.createArray(this.props.vacancies)\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"baseline\"\r\n      >\r\n        <Grid item>\r\n          {filled.map(el => {\r\n            return <HotelIcon style={{ marginRight: \"2px\" }} />\r\n          })}\r\n        </Grid>\r\n        <Grid item>\r\n          {vacancies.map(el => {\r\n            return <HotelOutlinedIcon style={{ marginRight: \"2px\" }} />\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport const RedButton = withStyles({\r\n  root: {\r\n    background: \"red\",\r\n    margin: \"2px\"\r\n  },\r\n  label: {\r\n    color: \"white\"\r\n  }\r\n})(Button)\r\n\r\nexport const GreenButton = withStyles({\r\n  root: {\r\n    background: \"green\",\r\n    margin: \"2px\"\r\n  },\r\n  label: {\r\n    color: \"white\"\r\n  }\r\n})(Button)\r\n\r\nexport const YellowButton = withStyles({\r\n  root: {\r\n    background: \"#ffc400\",\r\n    margin: \"2px\"\r\n  },\r\n  label: {\r\n    color: \"white\"\r\n  }\r\n})(Button)\r\n\r\nexport const XsTextField = withStyles({\r\n  root: {\r\n    width: 100,\r\n    marginRight: \"20px\",\r\n    marginBottom: \"20px\"\r\n  }\r\n})(TextField)\r\n\r\nexport const SmTextField = withStyles({\r\n  root: {\r\n    width: 200,\r\n    marginRight: \"20px\",\r\n    marginBottom: \"20px\"\r\n  }\r\n})(TextField)\r\n\r\nexport const StyledSelect = withStyles({\r\n  root: {\r\n    width: 200\r\n  }\r\n})(Select)\r\n\r\nexport const MdTextField = withStyles({\r\n  root: {\r\n    width: 400,\r\n    marginRight: \"20px\",\r\n    marginBottom: \"20px\"\r\n  }\r\n})(TextField)\r\n\r\nexport const StyledCard = withStyles({\r\n  root: {\r\n    card: {\r\n      maxWidth: 345\r\n    },\r\n    media: {\r\n      height: 140\r\n    }\r\n  }\r\n})\r\n\r\nexport const VerticalAlignGrid = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexWrap: \"nowrap\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  }\r\n})(Grid)\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <CircularProgress style={{ position: \"fixed\", top: \"50%\", left: \"50%\" }} />\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  TextField,\r\n  Radio,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Input,\r\n  InputBase\r\n} from \"@material-ui/core\"\r\nimport DeleteOutlineRoundedIcon from \"@material-ui/icons/DeleteOutlineRounded\"\r\nimport {\r\n  MdTextField,\r\n  XsTextField,\r\n  SmTextField,\r\n  RedButton,\r\n  StyledSelect\r\n} from \"./styledComponents\"\r\nimport { Field } from \"redux-form\"\r\n\r\nexport const TextFieldComponent = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => {\r\n  switch (custom.size) {\r\n    case \"md\":\r\n      return (\r\n        <MdTextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n    case \"xs\":\r\n      return (\r\n        <XsTextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n    case \"sm\":\r\n      return (\r\n        <SmTextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n    default:\r\n      return (\r\n        <TextField\r\n          label={label}\r\n          placeholder={label}\r\n          error={touched && invalid}\r\n          helperText={touched && error}\r\n          {...input}\r\n          {...custom}\r\n        />\r\n      )\r\n  }\r\n}\r\n\r\nexport const imageField = data => {\r\n  const {\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  } = data\r\n  console.log(data)\r\n  return (\r\n    <FormControl>\r\n      <InputBase\r\n        id=\"imageInput\"\r\n        variant=\"outlined\"\r\n        type=\"file\"\r\n        {...input}\r\n        error={(touched && invalid) || custom.provideError}\r\n        helperText={touched && error}\r\n        aria-describedby=\"imageInputHelperText\"\r\n      />\r\n      <FormHelperText id=\"imageInputHelperText\" error={true}>\r\n        {custom.helperText}\r\n      </FormHelperText>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const radioButtonComponent = ({ input }) => {\r\n  const selectedValue = input.value\r\n  return (\r\n    <FormControl style={{ display: \"inline-block\" }}>\r\n      <FormLabel component=\"legend\">AC:</FormLabel>\r\n      <RadioGroup\r\n        name={input.name}\r\n        value={input.value}\r\n        onChange={input.onChange}\r\n        row\r\n      >\r\n        <FormControlLabel\r\n          value={true}\r\n          control={<Radio />}\r\n          label=\"YES\"\r\n          labelPlacement=\"start\"\r\n          checked={selectedValue === \"true\" || selectedValue === true}\r\n        />\r\n        <FormControlLabel\r\n          value={false}\r\n          control={<Radio />}\r\n          label=\"NO\"\r\n          labelPlacement=\"start\"\r\n          checked={selectedValue === \"false\" || selectedValue === false}\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport const DeleteButton = ({ onClickMethod }) => {\r\n  return (\r\n    <RedButton size=\"small\" onClick={onClickMethod}>\r\n      <DeleteOutlineRoundedIcon></DeleteOutlineRoundedIcon>\r\n    </RedButton>\r\n  )\r\n}\r\n\r\nexport const renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport const renderSelectField = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} style={{ marginBottom: \"20px\" }}>\r\n    <InputLabel htmlFor=\"age-native-simple\" style={{ marginLeft: \"20px\" }}>\r\n      {input.name}\r\n    </InputLabel>\r\n    <StyledSelect\r\n      variant=\"outlined\"\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        name: \"Branch\",\r\n        id: \"age-native-simple\"\r\n      }}\r\n    >\r\n      {children}\r\n    </StyledSelect>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nexport const renderOptions = branches => {\r\n  if (branches) {\r\n    let branchesArr = Object.values(branches)\r\n    return (\r\n      <Field name=\"Branch\" component={renderSelectField} label=\"branch\">\r\n        <option value=\"\"></option>\r\n        {branchesArr.map(branch => {\r\n          return <option value={branch._id}>{branch.name}</option>\r\n        })}\r\n      </Field>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Paper, Typography } from \"@material-ui/core\"\r\n\r\nexport default props => {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        color: \"black\",\r\n        backgroundColor: \"#ffcdd2\",\r\n        width: \"420px\",\r\n        marginRight: \"7px\",\r\n        marginBottom: \"20px\",\r\n        padding: \"5px\"\r\n      }}\r\n    >\r\n      <Typography variant=\"subtitle1\" component=\"h3\">\r\n        {props.data}\r\n      </Typography>\r\n    </Paper>\r\n  )\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { withRouter, Link } from \"react-router-dom\"\r\nimport { Container, Typography, Button, Paper } from \"@material-ui/core\"\r\nimport { TextFieldComponent } from \"../utilities/FieldComponets\"\r\nimport { connect } from \"react-redux\"\r\nimport { loginUser } from \"../../actions/authActions\"\r\nimport RenderAlert from \"../utilities/RenderAlert\"\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n          >\r\n            Login\r\n          </Typography>\r\n          {this.props.location.redirect && (\r\n            <RenderAlert data=\"Please Login to continue\"></RenderAlert>\r\n          )}\r\n          {this.props.errors.msg && (\r\n            <RenderAlert data={this.props.errors.msg}></RenderAlert>\r\n          )}\r\n          <form\r\n            onSubmit={this.props.handleSubmit(formValues => {\r\n              this.props.loginUser(formValues, this.props.history)\r\n            })}\r\n          >\r\n            <Field\r\n              name=\"mail\"\r\n              label=\"Enter email id\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"password\"\r\n              label=\"Enter password\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              style={{ marginBottom: \"30px\" }}\r\n              type=\"submit\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </form>\r\n          <Link to=\"/register\" style={{ marginTop: \"10px\" }}>\r\n            <Typography variant=\"caption\" component=\"p\">\r\n              Not a user? SignUp\r\n            </Typography>\r\n          </Link>\r\n        </Container>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (values, props) => {\r\n  //   console.log(props)\r\n  let errors = {}\r\n  const requiredFields = [\"mail\", \"password\"]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required!\"\r\n    }\r\n  })\r\n  if (\r\n    values.mail &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.mail)\r\n  ) {\r\n    errors.mail = \"Invalid email address!\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginUser })(\r\n  reduxForm({ form: \"loginForm\", validate })(withRouter(Login))\r\n)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { verifyAccount } from \"../../actions/authActions\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Button } from \"@material-ui/core\"\r\n\r\nclass Verify extends Component {\r\n  componentDidMount() {\r\n    this.props.verifyAccount({\r\n      rand: this.props.match.params.value,\r\n      id: this.props.match.params.id\r\n    })\r\n  }\r\n  render() {\r\n    if (\r\n      this.props.auth.user.isVerified &&\r\n      this.props.auth.user.isVerified === false\r\n    ) {\r\n      return (\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n        >\r\n          Please check your mail for verification link\r\n        </Typography>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n          >\r\n            Your mail is successfully verified\r\n          </Typography>\r\n          <br></br>\r\n          <Link to=\"/login\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Link>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { verifyAccount })(Verify)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport _ from \"lodash\"\r\nimport { Container, Typography, Button } from \"@material-ui/core\"\r\nimport { TextFieldComponent } from \"../utilities/FieldComponets\"\r\nimport { connect } from \"react-redux\"\r\nimport { registerUser } from \"../../actions/authActions\"\r\n\r\nclass Register extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n          >\r\n            Register\r\n          </Typography>\r\n          <form\r\n            onSubmit={this.props.handleSubmit(formValues => {\r\n              formValues = _.omit(formValues, \"retype\")\r\n              this.props.registerUser(formValues, this.props.history)\r\n            })}\r\n          >\r\n            <Field\r\n              name=\"name\"\r\n              label=\"Enter username\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"mail\"\r\n              label=\"Enter email id\"\r\n              component={TextFieldComponent}\r\n              provideError={!_.isEmpty(this.props.errors) ? true : false}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n              helperText={\r\n                !_.isEmpty(this.props.errors) ? this.props.errors.mail : null\r\n              }\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"password\"\r\n              label=\"Enter password\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Field\r\n              name=\"retype\"\r\n              label=\"Re-type password\"\r\n              type=\"password\"\r\n              component={TextFieldComponent}\r\n              size=\"md\"\r\n              variant=\"outlined\"\r\n            ></Field>\r\n            <br />\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              style={{ marginTop: \"30px\" }}\r\n              type=\"submit\"\r\n            >\r\n              SignUp\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (values, props) => {\r\n  //   console.log(props)\r\n  const errors = {}\r\n  const requiredFields = [\"name\", \"mail\", \"password\", \"retype\"]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (values[\"password\"] !== values[\"retype\"]) {\r\n    errors[\"retype\"] = \"Not Matching\"\r\n  }\r\n  if (\r\n    values.mail &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.mail)\r\n  ) {\r\n    errors.mail = \"Invalid email address\"\r\n  }\r\n  //   console.log(props.users.errors)\r\n  return errors\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { registerUser })(\r\n  reduxForm({ form: \"registerForm\", validate })(withRouter(Register))\r\n)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Button, Grid, Container } from \"@material-ui/core\"\r\nimport {\r\n  FirstPage,\r\n  LastPage,\r\n  NavigateNext,\r\n  NavigateBefore\r\n} from \"@material-ui/icons\"\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentPage: this.props.currentPage\r\n    }\r\n    console.table(this.state)\r\n  }\r\n  renderButtons = (start, end) => {\r\n    let arr = Array.from(Array(end - start + 1), (x, index) => index + start)\r\n    return (\r\n      <Fragment>\r\n        {arr.map(a => {\r\n          return (\r\n            <Button\r\n              color={this.props.currentPage === a ? \"secondary\" : \"primary\"}\r\n              onClick={e => {\r\n                this.props.buttonClicked(a)\r\n                this.setState({ currentPage: a })\r\n              }}\r\n            >\r\n              {a}\r\n            </Button>\r\n          )\r\n        })}\r\n      </Fragment>\r\n    )\r\n  }\r\n  pagesRender = () => {\r\n    if (this.props.totalPages <= 3) {\r\n      return (\r\n        <Fragment>{this.renderButtons(1, this.props.totalPages)}</Fragment>\r\n        //all pages\r\n      )\r\n    } else {\r\n      console.log(this.state.currentPage)\r\n      if (this.state.currentPage <= 2) {\r\n        console.log(\"im in blabla\")\r\n        //butttons first later dots\r\n        return (\r\n          <Fragment>\r\n            {this.renderButtons(1, 3)}\r\n            <Button color=\"primary\">. . .</Button>\r\n          </Fragment>\r\n        )\r\n      } else if (this.state.currentPage >= this.props.totalPages - 1) {\r\n        //dots first buttons later\r\n        return (\r\n          <Fragment>\r\n            <Button color=\"primary\">. . .</Button>\r\n            {this.renderButtons(\r\n              this.props.totalPages - 2,\r\n              this.props.totalPages\r\n            )}\r\n          </Fragment>\r\n        )\r\n      } else {\r\n        //dots pages dots\r\n        return (\r\n          <Fragment>\r\n            <Button color=\"primary\">. . .</Button>\r\n            {this.renderButtons(\r\n              this.state.currentPage - 1,\r\n              this.state.currentPage + 1\r\n            )}\r\n            <Button color=\"primary\">. . .</Button>\r\n          </Fragment>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props.totalRecords)\r\n    return (\r\n      <Container maxWidth=\"md\" align=\"center\">\r\n        <Grid container>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                this.props.buttonClicked(1)\r\n              }}\r\n            >\r\n              <FirstPage />\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                if (this.props.currentPage !== 1) {\r\n                  this.props.buttonClicked(this.props.currentPage - 1)\r\n                  this.setState({ currentPage: this.props.currentPage - 1 })\r\n                }\r\n              }}\r\n            >\r\n              <NavigateBefore />\r\n            </Button>\r\n          </Grid>\r\n          {this.pagesRender()}\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                if (this.props.currentPage !== this.props.totalPages) {\r\n                  this.props.buttonClicked(this.props.currentPage + 1)\r\n                  this.setState({ currentPage: this.props.currentPage + 1 })\r\n                }\r\n              }}\r\n            >\r\n              <NavigateNext />\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={e => {\r\n                this.props.buttonClicked(this.props.totalPages)\r\n                this.setState({ currentPage: this.props.totalPages })\r\n              }}\r\n            >\r\n              <LastPage />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pagination\r\n","import React, { Component, Fragment } from \"react\"\r\nimport _ from \"lodash\"\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  Avatar\r\n} from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport Pagination from \"../utilities/Pagination\"\r\n\r\nclass Tenents extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.perPage = 1\r\n    this.state = {\r\n      currentPage: 1,\r\n      noTenents: Object.keys(props.tenents).length\r\n    }\r\n  }\r\n  renderButtons = (buttons, tenent) => {\r\n    let i = 0\r\n    return (\r\n      <Fragment>\r\n        {buttons.map(button => {\r\n          i++\r\n          return <Fragment key={i}>{button(tenent)}</Fragment>\r\n        })}\r\n      </Fragment>\r\n    )\r\n  }\r\n  otherFields = (fields, tenent) => {\r\n    let i = 0\r\n    i++\r\n    return (\r\n      <Fragment>\r\n        {fields.map(field => {\r\n          return (\r\n            <Fragment key={i}>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textPrimary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n              >\r\n                {`${field}:`}\r\n              </Typography>\r\n              {tenent[field]}\r\n            </Fragment>\r\n          )\r\n        })}\r\n      </Fragment>\r\n    )\r\n  }\r\n  handleChange = currentPage => {\r\n    this.setState({ currentPage })\r\n  }\r\n  paginatedTenents = () => {\r\n    let tenents = Object.values(this.props.tenents)\r\n    let start = (this.state.currentPage - 1) * this.perPage\r\n    let end = start + this.perPage\r\n    tenents = tenents.slice(start, end)\r\n    return tenents\r\n  }\r\n  renderContent = () => {\r\n    let tenents = this.paginatedTenents()\r\n    return (\r\n      <Fragment>\r\n        <List>\r\n          {tenents.map(tenent => {\r\n            return (\r\n              <Fragment>\r\n                <ListItem alignItems=\"flex-start\">\r\n                  <ListItemAvatar>\r\n                    <Avatar alt={tenent.name} src={tenent.image} />\r\n                  </ListItemAvatar>\r\n                  <Link\r\n                    to={`tenents/show/${tenent._id}`}\r\n                    style={{ textDecoration: \"none\", color: \"black\" }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={tenent.name}\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"textPrimary\"\r\n                          >\r\n                            branch:\r\n                          </Typography>\r\n                          {tenent.BranchName}\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"textPrimary\"\r\n                            style={{ marginLeft: \"20px\" }}\r\n                          >\r\n                            room:\r\n                          </Typography>\r\n                          {tenent.room}\r\n                          {this.props.fields &&\r\n                            this.otherFields(this.props.fields, tenent)}\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </Link>\r\n                  <ListItemSecondaryAction>\r\n                    {this.renderButtons(this.props.buttons, tenent)}\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              </Fragment>\r\n            )\r\n          })}\r\n        </List>\r\n        <Pagination\r\n          totalPages={Math.ceil(\r\n            Object.keys(this.props.tenents).length / this.perPage\r\n          )}\r\n          perPage={this.perPage}\r\n          currentPage={this.state.currentPage}\r\n          buttonClicked={cp => {\r\n            this.handleChange(cp)\r\n          }}\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {_.isEmpty(this.props.tenents) && <Spinner></Spinner>}\r\n        {!_.isEmpty(this.props.tenents) && this.renderContent()}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tenents\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { Typography, Container, Button } from \"@material-ui/core\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport { fetchBalances, payRent } from \"../../actions/balancesActions\"\r\nimport TenentsList from \"../Layouts/tennetsList\"\r\n\r\nclass Balances extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBalances()\r\n  }\r\n  paidButton = tenent => {\r\n    return (\r\n      <Button\r\n        onClick={() => {\r\n          this.props.payRent(tenent._id)\r\n        }}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Paid\r\n      </Button>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"md\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          BALANCES\r\n        </Typography>\r\n        {!_.isEmpty(this.props.state) && (\r\n          <TenentsList\r\n            fields={[\"rent\", \"dues\"]}\r\n            buttons={[this.paidButton]}\r\n            tenents={this.props.tenents}\r\n          />\r\n        )}\r\n        {!this.props.spinner.isSpinning && _.isEmpty(this.props.state) && (\r\n          <Fragment>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h3\"\r\n              style={{ marginTop: \"150px\", marginBottom: \"150px\" }}\r\n            >\r\n              {\"NO PAYMENTS TO BE RECIEVED\"}\r\n            </Typography>\r\n          </Fragment>\r\n        )}\r\n        {this.props.spinner.isSpinner && <Spinner></Spinner>}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tenents: state.balances,\r\n    errors: state.errors.balances,\r\n    spinner: state.spinner\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  fetchBalances,\r\n  payRent\r\n})(Balances)\r\n","import { FETCH_BALANCES, PAID_RENT, ERROR } from \"./actionTypes\"\r\nimport { startSpinningAction, stopSpinningAction } from \"./spinActions\"\r\nimport backend from \"../api/backendApi\"\r\n\r\nexport const fetchBalances = () => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .get(\"/tenents/balances\")\r\n    .then(tenents => {\r\n      dispatch({ type: FETCH_BALANCES, payload: tenents.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      if (err) {\r\n        dispatch({ type: ERROR, payload: true })\r\n        stopSpinningAction()\r\n      }\r\n    })\r\n}\r\n\r\nexport const payRent = id => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .put(`/tenents/${id}/pay`)\r\n    .then(tenents => {\r\n      dispatch({ type: PAID_RENT, payload: tenents.data })\r\n      startSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      if (err) {\r\n        dispatch({ type: ERROR, payload: true })\r\n        stopSpinningAction()\r\n      }\r\n    })\r\n}\r\n","import createHistory from \"history/createBrowserHistory\"\r\n\r\nexport default createHistory()\r\n","export const urlEncoder = fields => {\r\n  let str = \"\"\r\n  if (Object.keys.length) {\r\n    str = \"?\"\r\n  }\r\n  for (let field in fields) {\r\n    switch (field) {\r\n      case \"properties\":\r\n        str += field + \"=\" + fields.field.join(\",\")\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    str += \"&\"\r\n  }\r\n  return str\r\n}\r\n","import {\r\n  FETCH_BRANCH,\r\n  SHOW_BRANCH,\r\n  UPDATE_BRANCH,\r\n  DELETE_BRANCH,\r\n  CREATE_BRANCH,\r\n  ERROR,\r\n  IS_SPINNING,\r\n  NOT_SPINNING\r\n} from \"./actionTypes\"\r\n// import { createRoomsAction } from \"./roomsActions\"\r\nimport { startSpinningAction, stopSpinningAction } from \"./spinActions\"\r\nimport backend from \"../api/backendApi\"\r\nimport history from \"../history\"\r\nimport { urlEncoder } from \"../utilities\"\r\n\r\nexport const fetchBranches = (fields = {}) => dispatch => {\r\n  dispatch({ type: IS_SPINNING, payload: true })\r\n  let str = urlEncoder(fields)\r\n  backend\r\n    .get(\"/branches\" + str)\r\n    .then(branches => {\r\n      dispatch({ type: FETCH_BRANCH, payload: branches.data })\r\n      dispatch({ type: NOT_SPINNING, payload: false })\r\n    })\r\n    .catch(err => {\r\n      if (err) {\r\n        dispatch({ type: ERROR, payload: true })\r\n        dispatch({ type: NOT_SPINNING, payload: false })\r\n      }\r\n    })\r\n}\r\n\r\nexport const showBranches = (id, fields = {}) => dispatch => {\r\n  startSpinningAction()\r\n  let str = urlEncoder(fields)\r\n  backend\r\n    .get(`/branches/${id}/${str}`)\r\n    .then(branches => {\r\n      dispatch({ type: SHOW_BRANCH, payload: branches.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\nexport const updateBranches = (id, values) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .put(`/branches/${id}`, values)\r\n    .then(branches => {\r\n      dispatch({ type: UPDATE_BRANCH, payload: branches.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\nexport const deleteBranches = id => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .delete(\"/branches/\" + id)\r\n    .then(branches => {\r\n      dispatch({ type: DELETE_BRANCH, payload: branches.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\nexport const createBranches = (id, values) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .post(\"/branches\", values)\r\n    .then(branches => {\r\n      dispatch({ type: CREATE_BRANCH, payload: branches.data })\r\n      stopSpinningAction()\r\n      history.push(`/branches/${branches.data._id}/rooms/new`)\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia\r\n} from \"@material-ui/core\"\r\nimport { YellowButton } from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\n\r\nclass RenderCard extends React.Component {\r\n  render() {\r\n    const { deleteMethod, branch } = this.props\r\n    return (\r\n      <Card maxWidth=\"350\">\r\n        <Link\r\n          to={`/branches/show/${branch._id}`}\r\n          style={{ textDecoration: \"none\", color: \"black\" }}\r\n        >\r\n          <CardActionArea>\r\n            <CardMedia\r\n              image={branch.image}\r\n              title={branch.name}\r\n              component=\"img\"\r\n              height=\"170\"\r\n            />\r\n            <CardContent>\r\n              <Typography\r\n                // color=\"primary\"\r\n                gutterBottom\r\n                variant=\"h5\"\r\n                component=\"h2\"\r\n              >\r\n                {branch.name}\r\n              </Typography>\r\n              <Typography\r\n                //  color=\"primary\"\r\n                variant=\"body2\"\r\n                component=\"p\"\r\n              >\r\n                {branch.address}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Link>\r\n        <CardActions>\r\n          <Link\r\n            to={`/branches/edit/${branch._id}`}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n          >\r\n            <YellowButton size=\"small\">Edit</YellowButton>\r\n          </Link>\r\n          <DeleteButton\r\n            size=\"small\"\r\n            onClickMethod={() => {\r\n              deleteMethod(branch._id)\r\n            }}\r\n          >\r\n            Learn More\r\n          </DeleteButton>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RenderCard\r\n","import React from \"react\"\r\nimport { Container, Typography } from \"@material-ui/core\"\r\nimport img from \"../../assets/nodata.png\"\r\n\r\nexport default props => {\r\n  return (\r\n    <Container align=\"center\">\r\n      <img alt=\"no rooms added\" src={img}></img>\r\n      <Typography component=\"h1\" variant=\"h3\" style={{ marginTop: \"10px\" }}>\r\n        {props.message}\r\n      </Typography>\r\n    </Container>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Container, Typography } from \"@material-ui/core\"\r\nimport img from \"../../assets/maintainence.png\"\r\n\r\nexport default props => {\r\n  return (\r\n    <Container align=\"center\">\r\n      <img alt=\"no rooms added\" src={img}></img>\r\n      <Typography component=\"h1\" variant=\"h3\" style={{ marginTop: \"10px\" }}>\r\n        {props.message}\r\n      </Typography>\r\n    </Container>\r\n  )\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container, Typography, Grid, Button } from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport { fetchBranches, deleteBranches } from \"../../actions/branchesActions\"\r\nimport RenderCard from \"../Layouts/branchCard\"\r\nimport NoRecords from \"../Layouts/NoRecords\"\r\nimport Error from \"../Layouts/Error\"\r\n\r\nclass Branches extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBranches()\r\n  }\r\n  render() {\r\n    const { deleteBranches, branches, errors, spinner } = this.props\r\n    let branchesValues = Object.values(branches)\r\n    let isLoading = !errors.error && spinner && branchesValues.length === 0\r\n    let showRecords = !errors.error && !spinner && branchesValues.length > 0\r\n    let noRecords = !errors.error && !spinner && branchesValues.length === 0\r\n    let showErrors = errors.error\r\n    return (\r\n      <Fragment>\r\n        {!showErrors && (\r\n          <Fragment>\r\n            <Container maxWidth=\"md\">\r\n              <Typography\r\n                // color=\"primary\"\r\n                variant=\"h4\"\r\n                component=\"h3\"\r\n                style={{ marginTop: \"20px\", marginBottom: \"30px\" }}\r\n              >\r\n                Branches\r\n              </Typography>\r\n              <Fragment>\r\n                {isLoading && <Spinner></Spinner>}\r\n                {noRecords && (\r\n                  <NoRecords message=\"No branches exist\"></NoRecords>\r\n                )}\r\n                {showRecords && (\r\n                  <Fragment>\r\n                    <Grid container alignItems=\"center\" spacing={2}>\r\n                      {branchesValues.map(branch => {\r\n                        return (\r\n                          <Grid item key={branches._id} xs={12} sm={3} md={4}>\r\n                            <RenderCard\r\n                              branch={branch}\r\n                              deleteMethod={deleteBranches}\r\n                            ></RenderCard>\r\n                          </Grid>\r\n                        )\r\n                      })}\r\n                    </Grid>\r\n                  </Fragment>\r\n                )}\r\n              </Fragment>\r\n              {!spinner && (\r\n                <Link\r\n                  to=\"/branches/new\"\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    style={{ postion: \"fixed\", top: \"20px\", bottom: \"0\" }}\r\n                  >\r\n                    Create New\r\n                  </Button>\r\n                </Link>\r\n              )}\r\n            </Container>\r\n          </Fragment>\r\n        )}\r\n        {showErrors && <Error></Error>}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    branches: state.branches,\r\n    errors: state.errors,\r\n    spinner: state.spinner\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { fetchBranches, deleteBranches })(\r\n  Branches\r\n)\r\n","import React, { Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Typography, Divider, Grid } from \"@material-ui/core\"\r\nimport {\r\n  GreyPaper,\r\n  Repeator,\r\n  YellowButton\r\n} from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\n\r\nconst RoomRender = props => {\r\n  const { rooms } = props\r\n  if (rooms.length > 1 && Array.isArray(rooms)) {\r\n    return (\r\n      <ul style={{ listStyle: \"none\" }}>\r\n        {rooms.map(room => {\r\n          return (\r\n            <Fragment>\r\n              {room && typeof room === \"object\" && room.constructor === Object && (\r\n                <li key={room.number}>\r\n                  <GreyPaper>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          justify=\"flex-start\"\r\n                          alignItems=\"baseline\"\r\n                        >\r\n                          <Grid item>\r\n                            <Typography\r\n                              //  color=\"primary\"\r\n                              variant=\"subtitle1\"\r\n                            >\r\n                              <b>room number:</b>\r\n                              {room.number}\r\n                              <b style={{ marginLeft: \"30px\" }}>rent:</b>\r\n                              {room.fee}\r\n                              <b style={{ marginLeft: \"30px\" }}>A/C:</b>\r\n                              {room.AC ? \"available\" : \"not available\"}\r\n                              <b\r\n                                style={{\r\n                                  marginLeft: \"30px\",\r\n                                  marginRight: \"10px\"\r\n                                }}\r\n                              >\r\n                                beds:\r\n                              </b>\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Repeator\r\n                              number={room.beds}\r\n                              vacancies={room.vacancies}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link\r\n                          to={`/branches/${props.id}/rooms/edit/${room._id}`}\r\n                          style={{ textDecoration: \"none\", color: \"white\" }}\r\n                        >\r\n                          <YellowButton variant=\"contained\" size=\"small\">\r\n                            Edit\r\n                          </YellowButton>\r\n                        </Link>\r\n\r\n                        <DeleteButton\r\n                          onClickMethod={() => {\r\n                            this.props.delete(this.props.id, room._id)\r\n                            window.location.reload(false)\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </DeleteButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </GreyPaper>\r\n                </li>\r\n              )}\r\n            </Fragment>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  } else {\r\n    return (\r\n      <GreyPaper>\r\n        <b>\r\n          <Typography component=\"p\" variant=\"h6\">\r\n            NO ROOMS ADDED\r\n          </Typography>\r\n        </b>\r\n      </GreyPaper>\r\n    )\r\n  }\r\n}\r\n\r\nclass RenderRooms extends React.Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.rooms && (\r\n          <Fragment>\r\n            <Typography\r\n              // color=\"primary\"\r\n              variant=\"h5\"\r\n              component=\"h3\"\r\n              style={{\r\n                marginTop: \"20px\",\r\n                marginBottom: \"30px\",\r\n                textTransform: \"capitalize\"\r\n              }}\r\n            >\r\n              Rooms:\r\n            </Typography>\r\n            {this.props.rooms.map(rooms => {\r\n              return (\r\n                <div>\r\n                  <Typography\r\n                    // color=\"primary\"\r\n                    variant=\"h6\"\r\n                    component=\"h4\"\r\n                    style={{\r\n                      marginTop: \"20px\",\r\n                      marginBottom: \"30px\",\r\n                      textTransform: \"capitalize\"\r\n                    }}\r\n                  >\r\n                    {`Floor ${rooms[0]}:`}\r\n                  </Typography>\r\n                  <RoomRender rooms={rooms} id={this.props.id}></RoomRender>\r\n                  <Divider />\r\n                </div>\r\n              )\r\n            })}\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RenderRooms\r\n","import {\r\n  DELETE_ROOMS,\r\n  CREATE_ROOMS,\r\n  EDIT_ROOMS,\r\n  SHOW_ROOMS,\r\n  ERROR\r\n} from \"./actionTypes\"\r\nimport { startSpinningAction, stopSpinningAction } from \"./spinActions\"\r\nimport backend from \"../api/backendApi\"\r\n\r\nexport const createRoomsAction = (id, values) => dispatch => {\r\n  startSpinningAction()\r\n  const room = { ...values, vacancies: values.beds }\r\n  console.log(room)\r\n  backend\r\n    .post(`/branches/${id}/rooms/`, room)\r\n    .then(rooms => {\r\n      dispatch({ type: CREATE_ROOMS, payload: rooms.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n\r\nexport const showRoomsAction = (id, rid) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .get(`/branches/${id}/rooms/${rid}`)\r\n    .then(room => {\r\n      dispatch({ type: SHOW_ROOMS, payload: room.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n\r\nexport const editRoomsAction = (id, rid, values) => dispatch => {\r\n  startSpinningAction()\r\n  console.log(\"IM called action\")\r\n  backend\r\n    .put(`/branches/${id}/rooms/${rid}`, values)\r\n    .then(rooms => {\r\n      dispatch({ type: EDIT_ROOMS, payload: rooms.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n\r\nexport const deleteRoomsAction = (id, rid) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .delete(`/branches/${id}/rooms/${rid}`)\r\n    .then(rooms => {\r\n      console.log(\"im called\")\r\n      dispatch({ type: DELETE_ROOMS, payload: rooms.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { Container, Typography, Button } from \"@material-ui/core\"\r\nimport RenderRooms from \"../Layouts/RenderRooms\"\r\nimport { GreyPaper } from \"../utilities/styledComponents\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\nimport { Spinner } from \"../utilities/styledComponents\"\r\nimport { deleteRoomsAction } from \"../../actions/roomsActions\"\r\n\r\nclass ShowBranch extends Component {\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n  }\r\n  render() {\r\n    const { branches } = this.props\r\n    if (!_.isEmpty(branches)) {\r\n      return (\r\n        <Fragment>\r\n          <Container>\r\n            <Typography\r\n              // color=\"primary\"\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              style={{\r\n                marginTop: \"20px\",\r\n                marginBottom: \"30px\",\r\n                textTransform: \"capitalize\"\r\n              }}\r\n            >\r\n              {`${branches.name}:`}\r\n            </Typography>\r\n            <GreyPaper>\r\n              <Typography variant=\"subtitle1\">\r\n                <b style={{ marginRight: \"5px\" }}>CareTaker:</b>\r\n                {branches.careTaker}\r\n                <br></br>\r\n                <b style={{ marginRight: \"5px\" }}>Number:</b>\r\n                {branches.number}\r\n                <br></br>\r\n                <b style={{ marginRight: \"5px\" }}>Address:</b>\r\n                {branches.address}\r\n              </Typography>\r\n            </GreyPaper>\r\n            <RenderRooms\r\n              rooms={branches.rooms}\r\n              delete={this.props.deleteRoomsAction}\r\n              id={this.props.match.params.id}\r\n            ></RenderRooms>\r\n\r\n            <Link\r\n              to={`/branches/${branches._id}/rooms/new`}\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              <Button\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{ marginTop: \"20px\" }}\r\n              >\r\n                Add new Rooms\r\n              </Button>\r\n            </Link>\r\n          </Container>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return <Spinner></Spinner>\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches[ownProps.match.params.id],\r\n    rooms: state.rooms\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { showBranches, deleteRoomsAction })(\r\n  ShowBranch\r\n)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport FileBase from \"react-file-base64\"\r\nimport { TextFieldComponent } from \"../utilities/FieldComponets\"\r\n\r\nclass BranchForm extends Component {\r\n  inputFieldComponent = ({ input }) => {\r\n    return (\r\n      <Fragment>\r\n        <FileBase\r\n          type=\"file\"\r\n          multiple={false}\r\n          onDone={files => {\r\n            console.log(files)\r\n            input.value = files.base64\r\n            input.onChange(input.value)\r\n          }}\r\n        />\r\n        <img\r\n          src={input.value}\r\n          alt=\"upload tenent\"\r\n          style={{ height: \"200px\", width: \"200px\" }}\r\n        ></img>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.branches)\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(formValues => {\r\n          this.props.onSubmit(this.props.id, formValues)\r\n        })}\r\n      >\r\n        <Field\r\n          name=\"name\"\r\n          label=\"Enter the Branch name\"\r\n          component={TextFieldComponent}\r\n          size=\"md\"\r\n          variant=\"outlined\"\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"careTaker\"\r\n          label=\"Enter the care taker name\"\r\n          component={TextFieldComponent}\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"number\"\r\n          label=\"Enter the care taker number\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"floors\"\r\n          label=\"Enter floors\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          size=\"sm\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"address\"\r\n          label=\"Enter address\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n          multiline\r\n          rowsMax=\"4\"\r\n        ></Field>\r\n        <br></br>\r\n        <Field\r\n          name=\"image\"\r\n          label=\"upload an image\"\r\n          component={this.inputFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          style={{ marginTop: \"30px\" }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    \"name\",\r\n    \"careTaker\",\r\n    \"number\",\r\n    \"floors\",\r\n    \"address\",\r\n    \"image\"\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (values.floors < 1) {\r\n    errors.floors = \"invalid number\"\r\n  }\r\n  if (values.number && !values.number.toString().match(/^\\d{10}$/)) {\r\n    errors.number = \"invalid phone number\"\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default reduxForm({ form: \"branchForm\", validate })(BranchForm)\r\n","import React, { Component } from \"react\"\r\nimport { Container, Typography, CircularProgress } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { updateBranches, showBranches } from \"../../actions/branchesActions\"\r\nimport BranchForm from \"../Layouts/branchform\"\r\n\r\nclass BranchEdit extends Component {\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n  }\r\n  onSubmit = formValues => {\r\n    this.props.updateBranches(this.props.match.params.id, formValues)\r\n  }\r\n  render() {\r\n    if (this.props.branches) {\r\n      return (\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <Typography\r\n            color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n          >\r\n            Edit Branch\r\n          </Typography>\r\n          <br></br>\r\n          <BranchForm\r\n            id={this.props.match.params.id}\r\n            onSubmit={this.props.updateBranches}\r\n            initialValues={_.pick(\r\n              this.props.branches,\r\n              \"name\",\r\n              \"careTaker\",\r\n              \"number\",\r\n              \"floors\",\r\n              \"address\",\r\n              \"image\"\r\n            )}\r\n          ></BranchForm>\r\n        </Container>\r\n      )\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: \"300px\",\r\n            marginBottom: \"300px\"\r\n          }}\r\n        >\r\n          <Container align=\"center\">\r\n            <CircularProgress />\r\n          </Container>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { branches: state.branches[ownProps.match.params.id] }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateBranches, showBranches })(\r\n  BranchEdit\r\n)\r\n","import React from \"react\"\r\nimport BranchForm from \"../Layouts/branchform\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\n\r\nimport { createBranches } from \"../../actions/branchesActions\"\r\n\r\nconst BranchCreate = props => {\r\n  return (\r\n    <Container maxWidth=\"xl\" align=\"center\" bgcolor=\"secondary\">\r\n      <Typography\r\n        // color=\"primary\"\r\n        variant=\"h4\"\r\n        component=\"h3\"\r\n        style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n      >\r\n        Add a Branch\r\n      </Typography>\r\n      <br></br>\r\n      <BranchForm onSubmit={props.createBranches} id=\"\"></BranchForm>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default connect(null, { createBranches })(BranchCreate)\r\n","import {\r\n  FETCH_TENENTS,\r\n  SHOW_TENENTS,\r\n  DELETE_TENENTS,\r\n  EDIT_TENENTS,\r\n  CREATE_TENENTS,\r\n  ERROR\r\n} from \"./actionTypes\"\r\nimport { startSpinningAction, stopSpinningAction } from \"./spinActions\"\r\nimport backend from \"../api/backendApi\"\r\n\r\nexport const fetchTenents = () => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .get(\"/tenents\")\r\n    .then(tenents => {\r\n      dispatch({ type: FETCH_TENENTS, payload: tenents.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\nexport const showTenents = id => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .get(`/tenents/${id}`)\r\n    .then(tenents => {\r\n      let date = tenents.data.date\r\n      date = date.slice(0, 10)\r\n      dispatch({\r\n        type: SHOW_TENENTS,\r\n        payload: { ...tenents.data, date: date }\r\n      })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\nexport const updateTenents = (values, history, id) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .put(`/tenents/${id}`, values)\r\n    .then(branches => {\r\n      dispatch({ type: EDIT_TENENTS, payload: branches.data })\r\n      stopSpinningAction()\r\n      history.push(\"/tenents/\" + id)\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\nexport const deleteTenents = id => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .delete(\"/tenents/\" + id)\r\n    .then(tenents => {\r\n      dispatch({ type: DELETE_TENENTS, payload: tenents.data })\r\n      stopSpinningAction()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\nexport const createTenents = (values, history) => dispatch => {\r\n  startSpinningAction()\r\n  backend\r\n    .post(\"/tenents\", values)\r\n    .then(branches => {\r\n      dispatch({ type: CREATE_TENENTS, payload: branches.data })\r\n      stopSpinningAction()\r\n      history.goBack()\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ERROR, payload: true })\r\n      stopSpinningAction()\r\n    })\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport { Typography, Container, Button } from \"@material-ui/core\"\r\nimport { YellowButton } from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\nimport { fetchTenents, deleteTenents } from \"../../actions/TenentsActions\"\r\nimport { fetchBranches } from \"../../actions/branchesActions\"\r\nimport TenentsList from \"../Layouts/tennetsList\"\r\n\r\nclass Tenents extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchTenents(this.props.history)\r\n    if (_.isEmpty(this.props.branches)) {\r\n      this.props.fetchBranches([\"_id\", \"name\"])\r\n    }\r\n  }\r\n  editButton = tenent => {\r\n    return (\r\n      <Link\r\n        to={`/tenents/edit/${tenent._id}`}\r\n        style={{ textDecoration: \"none\", color: \"white\" }}\r\n      >\r\n        <YellowButton>Edit</YellowButton>\r\n      </Link>\r\n    )\r\n  }\r\n  deleteButton = tenent => {\r\n    return (\r\n      <DeleteButton\r\n        onClickMethod={() => {\r\n          this.props.deleteTenents(tenent._id)\r\n        }}\r\n      ></DeleteButton>\r\n    )\r\n  }\r\n  handleClick(offset) {\r\n    this.setState({ offset })\r\n  }\r\n  render() {\r\n    let buttonArray = []\r\n    buttonArray[0] = this.editButton\r\n    buttonArray[1] = this.deleteButton\r\n    return (\r\n      <Container maxWidth=\"md\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Tenants\r\n        </Typography>\r\n        {!this.props.errors.noRecords && (\r\n          <Fragment>\r\n            <TenentsList\r\n              tenents={this.props.tenents}\r\n              branches={this.props.branches}\r\n              buttons={buttonArray}\r\n            ></TenentsList>\r\n          </Fragment>\r\n        )}\r\n        {this.props.errors.noRecords && (\r\n          <Fragment>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h3\"\r\n              style={{ marginTop: \"150px\", marginBottom: \"150px\" }}\r\n            >\r\n              NO TENENTS ADDED\r\n            </Typography>\r\n          </Fragment>\r\n        )}\r\n        <Link\r\n          to=\"/tenents/new\"\r\n          style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ marginTop: \"30px\" }}\r\n          >\r\n            Add tenant\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    branches: state.branches,\r\n    tenents: state.tenents,\r\n    errors: state.errors\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  fetchTenents,\r\n  deleteTenents,\r\n  fetchBranches\r\n})(Tenents)\r\n","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  Container,\r\n  Typography,\r\n  CircularProgress,\r\n  Button,\r\n  Paper\r\n} from \"@material-ui/core\"\r\nimport { showTenents } from \"../../actions/TenentsActions\"\r\n\r\nclass ShowTenents extends Component {\r\n  componentDidMount() {\r\n    this.props.showTenents(this.props.match.params.id)\r\n  }\r\n  render() {\r\n    let tenent = this.props.tenents[this.props.match.params.id]\r\n    console.log(tenent)\r\n    if (!tenent) {\r\n      return <CircularProgress></CircularProgress>\r\n    } else {\r\n      return (\r\n        <Container maxWidth=\"md\" align=\"center\">\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{\r\n              marginTop: \"20px\",\r\n              marginBottom: \"30px\",\r\n              textTransform: \"capitalize\"\r\n            }}\r\n          >\r\n            Profile\r\n          </Typography>\r\n          <Paper style={{ padding: \"30px\" }}>\r\n            <img\r\n              src={tenent.image}\r\n              alt={tenent.name}\r\n              style={{ height: \"200px\", width: \"200px\" }}\r\n            ></img>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              <b>Name:</b>\r\n              {tenent.name}\r\n              <br></br>\r\n              <b>Branch:</b>\r\n              {tenent.BranchName}\r\n              <br></br>\r\n              <b>Room:</b>\r\n              {tenent.room}\r\n              <br></br>\r\n              <b>Mail:</b>\r\n              {tenent.mail}\r\n              <br></br>\r\n              <b>Mobile:</b>\r\n              {tenent.number}\r\n              <br></br>\r\n              <b>Adhaar:</b>\r\n              {tenent.adhar}\r\n              <br></br>\r\n              <b>Occupation:</b>\r\n              {tenent.occupation}\r\n              <br></br>\r\n              <b>Gaurdian Name:</b>\r\n              {tenent.gaurdianName}\r\n              <br></br>\r\n              <b>Gaurdian Number:</b>\r\n              {tenent.gaurdianNumber}\r\n              <br></br>\r\n              <b>Gaurdian Address:</b>\r\n              {tenent.gaurdianAddress}\r\n            </Typography>\r\n          </Paper>\r\n          <Link\r\n            to=\"/tenents\"\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n          >\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              Done\r\n            </Button>\r\n          </Link>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { tenents: state.tenents }\r\n}\r\n\r\nexport default connect(mapStateToProps, { showTenents })(ShowTenents)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\"\r\nimport { Button, Paper, Typography, Grid } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\"\r\nimport FileBase from \"react-file-base64\"\r\nimport {\r\n  TextFieldComponent,\r\n  renderOptions,\r\n  renderFromHelper\r\n} from \"../utilities/FieldComponets\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Repeator } from \"../utilities/styledComponents\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\n\r\nconst fullStyle = {\r\n  backgroundColor: \"#9e9e9e\",\r\n  width: \"200px\"\r\n}\r\n\r\nconst clickedStyle = {\r\n  backgroundColor: \"#bbdefb\",\r\n  // backgroundColor: \"#ef9a9a\",\r\n  width: \"250px\"\r\n  // height: \"140````````px\"\r\n}\r\nconst unclickedStyle = {\r\n  width: \"200px\"\r\n}\r\n\r\nclass TenentForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { selected: null }\r\n    this.count = null\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selectedBranch !== prevProps.selectedBranch) {\r\n      this.props.showBranches(this.props.selectedBranch)\r\n    }\r\n    if (this.props.initialValues && this.count === null) {\r\n      console.log(\"im in didmunt\")\r\n      this.setState({ selected: this.props.initialValues.roomNumber })\r\n      this.count = 1\r\n      console.log(this.state)\r\n    }\r\n  }\r\n  inputFieldComponent = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  }) => {\r\n    return (\r\n      <Fragment>\r\n        <FileBase\r\n          type=\"file\"\r\n          multiple={false}\r\n          error={touched && invalid}\r\n          onDone={files => {\r\n            console.log(files)\r\n            input.value = files.base64\r\n            input.onChange(input.value)\r\n          }}\r\n        />\r\n        <img\r\n          src={input.value}\r\n          alt=\"upload image\"\r\n          style={{ height: \"200px\", width: \"200px\" }}\r\n        ></img>\r\n        {renderFromHelper({ touched, error })}\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  styleProvider = room => {\r\n    if (!this.props.initialValues) {\r\n      if (room.vacancies > 0) {\r\n        console.log(room)\r\n        if (this.state.selected === room._id) {\r\n          return clickedStyle\r\n        }\r\n        return unclickedStyle\r\n      }\r\n      return fullStyle\r\n    } else {\r\n      if (this.state.selected === room._id) {\r\n        return clickedStyle\r\n      }\r\n      return unclickedStyle\r\n    }\r\n  }\r\n\r\n  roomFieldComponent = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  }) => {\r\n    let roomFloors = this.props.branches[this.props.selectedBranch].rooms\r\n    return (\r\n      // all rooms\r\n      <Grid container direction=\"row\" justify=\"center\" spacing={2}>\r\n        {roomFloors.map(rooms => {\r\n          return (\r\n            //per floor\r\n            <Grid item key={rooms[0]}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                spacing={2}\r\n                key={rooms[0]}\r\n              >\r\n                <Typography component=\"p\" variant=\"subtitle1\">\r\n                  Floor {rooms[0]}:\r\n                </Typography>\r\n                {rooms.map(room => {\r\n                  return (\r\n                    //per room\r\n                    <Grid item key={room._id}>\r\n                      {room &&\r\n                        typeof room === \"object\" &&\r\n                        room.constructor === Object && (\r\n                          <Fragment>\r\n                            <Paper\r\n                              style={this.styleProvider(room)}\r\n                              onClick={() => {\r\n                                if (\r\n                                  room.vacancies > 0 ||\r\n                                  (this.props.initialValues &&\r\n                                    this.props.initialValues.roomNumber ===\r\n                                      room._id)\r\n                                ) {\r\n                                  this.setState({ selected: room._id })\r\n                                  input.onChange(room._id)\r\n                                }\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"subtitle1\" component=\"p\">\r\n                                <b>Room Number:</b>\r\n                                {room.number}\r\n                                <br></br>\r\n                                <b>Fee:</b>\r\n                                {room.fee}\r\n                                <br></br>\r\n                                <b>A/C:</b>\r\n                                {room.AC ? \"available\" : \"not available\"}\r\n                                <br></br>\r\n                                <Grid container justify=\"center\">\r\n                                  <Grid item>\r\n                                    <b>beds:</b>\r\n                                  </Grid>\r\n                                  <Grid item>\r\n                                    <Repeator\r\n                                      number={room.beds}\r\n                                      vacancies={room.vacancies}\r\n                                    ></Repeator>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Typography>\r\n                            </Paper>\r\n                          </Fragment>\r\n                        )}\r\n                    </Grid>\r\n                  )\r\n                })}\r\n              </Grid>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.history)\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(formValues => {\r\n          formValues = {\r\n            ...formValues,\r\n            BranchName: this.props.branches[formValues.Branch].name\r\n          }\r\n          this.props.onSubmit(formValues, this.props.history, this.props.id)\r\n        })}\r\n      >\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h5\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          enter tenant details\r\n        </Typography>\r\n        <br></br>\r\n        {/* name */}\r\n        <Field\r\n          name=\"name\"\r\n          label=\"Enter the Tenent name\"\r\n          component={TextFieldComponent}\r\n          size=\"md\"\r\n          variant=\"outlined\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* mail */}\r\n\r\n        <Field\r\n          name=\"mail\"\r\n          label=\"Enter the email id\"\r\n          component={TextFieldComponent}\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* date */}\r\n        <Field\r\n          name=\"date\"\r\n          size=\"md\"\r\n          label=\"add date\"\r\n          type=\"date\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          component={TextFieldComponent}\r\n        />\r\n        <br></br>\r\n\r\n        {/* number */}\r\n        <Field\r\n          name=\"number\"\r\n          label=\"Enter mobile number\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* advance */}\r\n\r\n        <Field\r\n          name=\"advance\"\r\n          label=\"Advance\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          size=\"sm\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* adhar */}\r\n        <Field\r\n          name=\"adhar\"\r\n          label=\"Enter aadhar\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* occupation */}\r\n        <Field\r\n          name=\"occupation\"\r\n          label=\"Enter Occupation\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* gaurdian */}\r\n        <Field\r\n          name=\"gaurdianName\"\r\n          label=\"Enter the Tenent name\"\r\n          component={TextFieldComponent}\r\n          size=\"md\"\r\n          variant=\"outlined\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* gaurdainanumber */}\r\n        <Field\r\n          name=\"gaurdianNumber\"\r\n          label=\"Enter gaurdian mobile number\"\r\n          type=\"tel\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* gaurdianaddress */}\r\n        <Field\r\n          name=\"gaurdianAddress\"\r\n          label=\"Enter Gaurdian address\"\r\n          variant=\"outlined\"\r\n          size=\"md\"\r\n          component={TextFieldComponent}\r\n          multiline\r\n          rowsMax=\"4\"\r\n        ></Field>\r\n        <br></br>\r\n\r\n        {/* tenent image */}\r\n        <Field\r\n          name=\"image\"\r\n          label=\"upload an image\"\r\n          component={this.inputFieldComponent}\r\n        ></Field>\r\n        <br></br>\r\n        <br></br>\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h5\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          select a room\r\n        </Typography>\r\n        {/* branch*/}\r\n        {renderOptions(this.props.branches)}\r\n        <br></br>\r\n        {this.props.selectedBranch &&\r\n          this.props.branches[this.props.selectedBranch] &&\r\n          this.props.branches[this.props.selectedBranch].rooms &&\r\n          Array.isArray(\r\n            this.props.branches[this.props.selectedBranch].rooms[0]\r\n          ) && (\r\n            <Field\r\n              name=\"roomNumber\"\r\n              label=\"select a room\"\r\n              component={this.roomFieldComponent}\r\n            ></Field>\r\n          )}\r\n        {/* {console.log(this.props)} */}\r\n        {/* submit button` */}\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          style={{ marginTop: \"30px\" }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    \"name\",\r\n    \"mail\",\r\n    \"date\",\r\n    \"advance\",\r\n    \"adhar\",\r\n    \"number\",\r\n    \"occupation\",\r\n    \"gaurdianName\",\r\n    \"gaurdianAddress\",\r\n    \"gaurdianNumber\",\r\n    \"image\"\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (values.number && !values.number.toString().match(/^\\d{10}$/)) {\r\n    errors.number = \"invalid phone number\"\r\n  }\r\n  if (\r\n    values.gaurdiannumber &&\r\n    !values.gaurdianNumber.toString().match(/^\\d{10}$/)\r\n  ) {\r\n    errors.gaurdianNumber = \"invalid phone number\"\r\n  }\r\n  if (\r\n    values.mail &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.mail)\r\n  ) {\r\n    errors.mail = \"Invalid email address\"\r\n  }\r\n  return errors\r\n}\r\n\r\nconst selector = formValueSelector(\"tenentForm\")\r\n\r\nconst mapStateToProps = state => {\r\n  const selectedBranch = selector(state, \"Branch\")\r\n  return { selectedBranch, branches: state.branches }\r\n}\r\n\r\nexport default connect(mapStateToProps, { showBranches })(\r\n  reduxForm({ form: \"tenentForm\", validate })(withRouter(TenentForm))\r\n)\r\n","import React, { Component } from \"react\"\r\nimport TenentForm from \"../Layouts/tenentsForm\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\nimport { showTenents, updateTenents } from \"../../actions/TenentsActions\"\r\nimport { fetchBranches } from \"../../actions/branchesActions\"\r\n\r\nclass TenentsEdit extends Component {\r\n  componentDidMount() {\r\n    this.props.showTenents(this.props.match.params.id)\r\n    this.props.fetchBranches([\"_id\", \"name\", \"rooms\", \"floors\"])\r\n  }\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"xl\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Add a Tenent\r\n        </Typography>\r\n        <br></br>\r\n        <TenentForm\r\n          onSubmit={(values, id) => this.props.updateTenents(values, id)}\r\n          initialValues={this.props.tenents[this.props.match.params.id]}\r\n          branches={this.props.branches}\r\n          id={this.props.match.params.id}\r\n        ></TenentForm>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { tenents: state.tenents, branches: state.branches }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  showTenents,\r\n  updateTenents,\r\n  fetchBranches\r\n})(TenentsEdit)\r\n","import React from \"react\"\r\nimport TenentForm from \"../Layouts/tenentsForm\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\nimport { createTenents } from \"../../actions/TenentsActions\"\r\nimport { fetchBranches } from \"../../actions/branchesActions\"\r\n\r\nclass TenentCreate extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchBranches([\"_id\", \"name\", \"rooms\", \"floors\"])\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"xl\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Add a Tenent\r\n        </Typography>\r\n        <br></br>\r\n        <TenentForm\r\n          onSubmit={this.props.createTenents}\r\n          branches={this.props.branches}\r\n        ></TenentForm>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { branches: state.branches }\r\n}\r\nexport default connect(mapStateToProps, { createTenents, fetchBranches })(\r\n  TenentCreate\r\n)\r\n","import React from \"react\"\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1>rooms</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Field, reduxForm, FieldArray } from \"redux-form\"\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Radio,\r\n  CircularProgress,\r\n  Grid\r\n} from \"@material-ui/core\"\r\nimport {\r\n  TextFieldComponent,\r\n  radioButtonComponent,\r\n  DeleteButton\r\n} from \"../utilities/FieldComponets\"\r\nimport { GreyPaper, GreenButton } from \"../utilities/styledComponents\"\r\nimport { connect } from \"react-redux\"\r\nimport { deleteRoomsAction } from \"../../actions/roomsActions\"\r\n\r\n//class declaration\r\n\r\nclass RoomForm extends Component {\r\n  //field array\r\n\r\n  fieldArrayComponent = ({ fields }) => {\r\n    return (\r\n      <ul style={{ listStyle: \"none\" }}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"center\"\r\n        >\r\n          {fields.map((room, index) => (\r\n            <Grid item>\r\n              <GreyPaper>\r\n                <li key={index}>\r\n                  {/* title */}\r\n                  <Typography \r\n                  // color=\"primary\"\r\n                   variant=\"h6\" gutterBottom>\r\n                    Room #{index + 1}\r\n                  </Typography>\r\n\r\n                  {/* Name */}\r\n                  <Field\r\n                    name={`${room}.number`}\r\n                    label=\"enter room number\"\r\n                    component={TextFieldComponent}\r\n                    size=\"sm\"\r\n                  ></Field>\r\n\r\n                  {/* floor number */}\r\n                  <Field\r\n                    name={`${room}.floor`}\r\n                    label=\"floor\"\r\n                    type=\"number\"\r\n                    size=\"xs\"\r\n                    min=\"1\"\r\n                    component={TextFieldComponent}\r\n                  ></Field>\r\n\r\n                  {/* Number of beds */}\r\n                  <Field\r\n                    name={`${room}.beds`}\r\n                    label=\"beds\"\r\n                    type=\"number\"\r\n                    size=\"xs\"\r\n                    min=\"1\"\r\n                    component={TextFieldComponent}\r\n                  ></Field>\r\n\r\n                  {/* fee */}\r\n                  <Field\r\n                    name={`${room}.fee`}\r\n                    label=\"enter amount of fee\"\r\n                    type=\"number\"\r\n                    size=\"sm\"\r\n                    component={TextFieldComponent}\r\n                  ></Field>\r\n\r\n                  {/* AC */}\r\n                  <Field name={`${room}.AC`} component={radioButtonComponent}>\r\n                    <Radio value={true} label=\"YES\" />\r\n                    <Radio value={false} label=\"NO\" />\r\n                  </Field>\r\n                  <br></br>\r\n\r\n                  {/* save button */}\r\n                  <GreenButton\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    onClick={this.props.handleSubmit(() => {\r\n                      this.props.onSubmit(this.props.id, fields.get(index))\r\n                      fields.remove(index)\r\n                    })}\r\n                  >\r\n                    save\r\n                  </GreenButton>\r\n\r\n                  {/* remove button */}\r\n                  <DeleteButton\r\n                    onClickMethod={() => {\r\n                      fields.remove(index)\r\n                    }}\r\n                  ></DeleteButton>\r\n                </li>\r\n              </GreyPaper>\r\n            </Grid>\r\n          ))}\r\n\r\n          {/* Add new Button */}\r\n          <Grid item>\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => fields.push({})}\r\n            >\r\n              Add New Room\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  //render\r\n  render() {\r\n    if (this.props.branches) {\r\n      return (\r\n        <Fragment>\r\n          <form>\r\n            <FieldArray\r\n              name=\"rooms\"\r\n              component={this.fieldArrayComponent}\r\n            ></FieldArray>\r\n          </form>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return <CircularProgress />\r\n    }\r\n  }\r\n}\r\n\r\n//validations\r\nconst validate = (values, props) => {\r\n  const errors = {}\r\n  const roomArrayErrors = []\r\n  if (!values.rooms || !values.rooms.length) {\r\n    errors.rooms = { _errors: \"Atleast one room must be added\" }\r\n  } else {\r\n    values.rooms.forEach((room, roomIndex) => {\r\n      const roomErrors = {}\r\n      if (props.branches[props.id]) {\r\n        for (let i = 0; i < props.branches[props.id].rooms.length; i++) {\r\n          if (room.number === props.branches[props.id].rooms[i].number) {\r\n            roomErrors.number = \"already exists\"\r\n            roomArrayErrors[roomIndex] = roomErrors\r\n          }\r\n        }\r\n      }\r\n      if (!room || !room.number) {\r\n        roomErrors.number = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (!room || !room.floor) {\r\n        roomErrors.floor = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (props.branches[props.id]) {\r\n        if (room.floor > props.branches[props.id].floors) {\r\n          roomErrors.floor = \"Not a valid floor\"\r\n          roomArrayErrors[roomIndex] = roomErrors\r\n        }\r\n      }\r\n      if (!room || !room.beds) {\r\n        roomErrors.beds = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (!room || !room.fee) {\r\n        roomErrors.fee = \"Required\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (room.floor < 1) {\r\n        roomErrors.floor = \"not a valid number\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (room.beds < 1) {\r\n        roomErrors.beds = \"not a valid number\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n      if (room.fee < 1) {\r\n        roomErrors.fee = \"not a valid number\"\r\n        roomArrayErrors[roomIndex] = roomErrors\r\n      }\r\n    })\r\n  }\r\n  if (roomArrayErrors.length) {\r\n    errors.rooms = roomArrayErrors\r\n  }\r\n  return errors\r\n}\r\n\r\n//config and exports\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches,\r\n    initalValues: { rooms: ownProps.initialValues }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { deleteRoomsAction })(\r\n  reduxForm({ form: \"roomForm\", validate })(RoomForm)\r\n)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container, Typography, Button, Grid } from \"@material-ui/core\"\r\nimport _ from \"lodash\"\r\nimport {\r\n  createRoomsAction,\r\n  deleteRoomsAction\r\n} from \"../../actions/roomsActions\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\nimport RoomForm from \"../Layouts/roomForm\"\r\nimport { GreyPaper, YellowButton } from \"../utilities/styledComponents\"\r\nimport { DeleteButton } from \"../utilities/FieldComponets\"\r\nimport img from \"../../assets/nodata.png\"\r\n\r\n//  rooms Create\r\n\r\nclass RoomsCreate extends Component {\r\n  //didmount\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n  }\r\n\r\n  //rendering list of added rooms\r\n  renderList() {\r\n    let rooms = Object.keys(this.props.rooms)\r\n\r\n    //adding rooms\r\n    if (rooms.length) {\r\n      return (\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          {/* heading */}\r\n          <Typography\r\n            // color=\"primary\"\r\n            variant=\"h4\"\r\n            component=\"h3\"\r\n            style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n          >\r\n            Added Rooms\r\n          </Typography>\r\n\r\n          {/* List of rooms */}\r\n          <ul style={{ listStyle: \"none\" }}>\r\n            {rooms.map(room => {\r\n              room = this.props.rooms[room]\r\n              return (\r\n                <li key={room._id}>\r\n                  <GreyPaper>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        <Typography\r\n                          //  color=\"primary\"\r\n                          variant=\"subtitle1\"\r\n                        >\r\n                          <b>room number:</b>\r\n                          {room.number}\r\n                          <b style={{ marginLeft: \"30px\" }}>floor:</b>\r\n                          {room.floor}\r\n                          <b style={{ marginLeft: \"30px\" }}>beds:</b>\r\n                          {room.beds}\r\n                          <b style={{ marginLeft: \"30px\" }}>rent:</b>\r\n                          {room.fee}\r\n                          <b style={{ marginLeft: \"30px\" }}>A/C:</b>\r\n                          {room.AC ? \"available\" : \"not available\"}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link\r\n                          to={`/branches/${this.props.match.params.id}/rooms/edit/${room._id}`}\r\n                          style={{ textDecoration: \"none\", color: \"white\" }}\r\n                        >\r\n                          <YellowButton variant=\"contained\" size=\"small\">\r\n                            Edit\r\n                          </YellowButton>\r\n                        </Link>\r\n                        <DeleteButton\r\n                          onClickMethod={() => {\r\n                            this.props.deleteRoomsAction(\r\n                              this.props.match.params.id,\r\n                              room._id\r\n                            )\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </DeleteButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </GreyPaper>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </Container>\r\n      )\r\n    } else {\r\n      return (\r\n        <Container align=\"center\">\r\n          <img alt=\"no rooms added\" src={img}></img>\r\n          <Typography\r\n            //  color=\"primary\"\r\n            variant=\"subtitle1\"\r\n          >\r\n            No rooms are added yet\r\n          </Typography>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n  renderDone = () => {\r\n    if (!_.isEmpty(this.props.branches)) {\r\n      if (\r\n        this.props.branches[this.props.match.params.id].rooms.length ||\r\n        !_.isEmpty(this.props.rooms)\r\n      ) {\r\n        return (\r\n          <Link\r\n            to=\"/branches\"\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n          >\r\n            <Button size=\"large\" color=\"primary\" variant=\"contained\">\r\n              Done!\r\n            </Button>\r\n          </Link>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <Fragment>\r\n        {this.renderList()}\r\n        <Container maxWidth=\"xl\" align=\"center\">\r\n          <br></br>\r\n          <RoomForm\r\n            onSubmit={this.props.createRoomsAction}\r\n            id={this.props.match.params.id}\r\n          ></RoomForm>\r\n          <br></br>\r\n          {this.renderDone()}\r\n        </Container>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches,\r\n    rooms: state.rooms\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  showBranches,\r\n  createRoomsAction,\r\n  deleteRoomsAction\r\n})(RoomsCreate)\r\n","import React, { Component } from \"react\"\r\nimport { Button, Radio, Grid } from \"@material-ui/core\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport {\r\n  TextFieldComponent,\r\n  radioButtonComponent\r\n} from \"../utilities/FieldComponets\"\r\n\r\nclass RoomEditForm extends Component {\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(values => {\r\n          console.log(\"im pressed\")\r\n          this.props.editRoomsAction(this.props.id, this.props.rid, values)\r\n        })}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          style={{ marginTop: \"25px\" }}\r\n        >\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"sm\"\r\n              name=\"number\"\r\n              label=\"enter room number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"xs\"\r\n              name=\"floor\"\r\n              label=\"floor\"\r\n              type=\"number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"xs\"\r\n              name=\"beds\"\r\n              label=\"beds\"\r\n              type=\"number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              variant=\"outlined\"\r\n              size=\"sm\"\r\n              name=\"fee\"\r\n              label=\"enter amount of fee\"\r\n              type=\"number\"\r\n              component={TextFieldComponent}\r\n            ></Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field name=\"AC\" component={radioButtonComponent}>\r\n              <Radio value={true} label=\"YES\" />\r\n              <Radio value={false} label=\"NO\" />\r\n            </Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              type=\"submit\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (values, props) => {\r\n  const errors = {}\r\n  const requiredFields = [\"number\", \"fee\", \"beds\", \"AC\", \"floor\"]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\"\r\n    }\r\n  })\r\n  if (props.branches) {\r\n    if (values[\"floor\"] > props.branches.floors) {\r\n      errors[\"floor\"] = \"Not a valid floor\"\r\n    }\r\n  }\r\n  return errors\r\n}\r\n\r\nexport default reduxForm({ form: \"roomEditForm\", validate })(RoomEditForm)\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Typography, Container } from \"@material-ui/core\"\r\nimport RoomEditForm from \"../Layouts/roomEditForm\"\r\nimport { editRoomsAction, showRoomsAction } from \"../../actions/roomsActions\"\r\nimport { showBranches } from \"../../actions/branchesActions\"\r\n\r\nclass RoomsCreate extends Component {\r\n  componentDidMount() {\r\n    this.props.showBranches(this.props.match.params.id)\r\n    this.props.showRoomsAction(\r\n      this.props.match.params.id,\r\n      this.props.match.params.rid\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"xl\" align=\"center\">\r\n        <Typography\r\n          // color=\"primary\"\r\n          variant=\"h4\"\r\n          component=\"h3\"\r\n          style={{ marginTop: \"20px\", marginBottom: \"5px\" }}\r\n        >\r\n          Edit Room\r\n        </Typography>\r\n        <RoomEditForm\r\n          initialValues={this.props.rooms}\r\n          branches={this.props.branches}\r\n          id={this.props.match.params.id}\r\n          rid={this.props.match.params.rid}\r\n          editRoomsAction={this.props.editRoomsAction}\r\n        ></RoomEditForm>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    branches: state.branches[ownProps.match.params.id],\r\n    rooms: state.rooms[ownProps.match.params.rid]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  showBranches,\r\n  showRoomsAction,\r\n  editRoomsAction\r\n})(RoomsCreate)\r\n","import React, { Component } from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass PrivateRoute extends Component {\r\n  render() {\r\n    const { component: Component, auth, ...rest } = this.props\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          return auth.isAuthenticated === true ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect to={{ pathname: \"/login\", redirect: true }} />\r\n          )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(PrivateRoute)\r\n","import React from \"react\"\r\nimport Header from \"./Layouts/header\"\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport Home from \"./basic/home\"\r\nimport Login from \"./basic/login\"\r\nimport Verify from \"./basic/verify\"\r\nimport Register from \"./basic/register\"\r\nimport Balance from \"./basic/balance\"\r\nimport Branches from \"./branches/branches\"\r\nimport BranchesShow from \"./branches/branchesShow\"\r\nimport BranchesEdit from \"./branches/branchesEdit\"\r\nimport BranchesCreate from \"./branches/branchesCreate\"\r\nimport Tenents from \"./tenents/tenents\"\r\nimport TenentsShow from \"./tenents/tenentsShow\"\r\nimport TenentsEdit from \"./tenents/tenentsEdit\"\r\nimport TenentsCreate from \"./tenents/tenentsCreate\"\r\nimport Rooms from \"./rooms/rooms\"\r\nimport RoomsCreate from \"./rooms/roomsCreate\"\r\nimport RoomsEdit from \"./rooms/roomsEdit\"\r\nimport PrivateRoute from \"./utilities/PrivateRoute\"\r\n// \"#006064\"-aqaua-#e0f7fa\r\n//\"#01579b\"-blue-\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#428e92\",\r\n      main: \"#138496\",\r\n      dark: \"#00363a\",\r\n      contrastText: \"white\"\r\n    },\r\n    secondary: {\r\n      light: \"#92ffc6\",\r\n      main: \"#f64b3c\",\r\n      dark: \"#1aa867\",\r\n      contrastText: \"#000\"\r\n    },\r\n    background: \"#5cdb95\"\r\n  }\r\n})\r\nexport default () => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Header></Header>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/register\" exact component={Register} />\r\n        <Route path=\"/verify/:value/:id\" exact component={Verify} />\r\n        <PrivateRoute path=\"/branches\" exact component={Branches} />\r\n        <PrivateRoute path=\"/branches/new\" exact component={BranchesCreate} />\r\n        <PrivateRoute\r\n          path=\"/branches/show/:id\"\r\n          exact\r\n          component={BranchesShow}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/branches/edit/:id\"\r\n          exact\r\n          component={BranchesEdit}\r\n        />\r\n        <PrivateRoute path=\"/branches/:id/rooms\" exact component={Rooms} />\r\n        <PrivateRoute\r\n          path=\"/branches/:id/rooms/new\"\r\n          exact\r\n          component={RoomsCreate}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/branches/:id/rooms/edit/:rid\"\r\n          exact\r\n          component={RoomsEdit}\r\n        />\r\n        <PrivateRoute path=\"/tenents\" exact component={Tenents} />\r\n        <PrivateRoute path=\"/tenents/show/:id\" exact component={TenentsShow} />\r\n        <PrivateRoute path=\"/tenents/new\" exact component={TenentsCreate} />\r\n        <PrivateRoute path=\"/tenents/edit/:id\" exact component={TenentsEdit} />\r\n        <PrivateRoute path=\"/balances\" exact component={Balance} />\r\n      </Switch>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport reducers from \"./reducers\"\nimport Thunk from \"redux-thunk\"\nimport jwt_decode from \"jwt-decode\"\nimport setAuthToken from \"./api/setAuthToken\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { setCurrentUser } from \"./actions/authActions\"\nimport App from \"./components/App\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(Thunk)))\n\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken)\n  const decodedToken = jwt_decode(localStorage.jwtToken)\n  store.dispatch(setCurrentUser(decodedToken))\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector(\"#root\")\n)\n","module.exports = __webpack_public_path__ + \"static/media/nodata.8ba65c1e.png\";"],"sourceRoot":""}